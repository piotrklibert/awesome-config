{
  "inferred":true,
  "kind":"utility_libraries",
  "mod_name":"gears.filesystem",
  "summary":"Filesystem module for gears.",
  "sections":{
    "by_name":[]
  },
  "name":"gears.filesystem",
  "modifiers":[],
  "description":"",
  "items":[{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"dir",
        "map":{
          "dir":" The directory."
        }
      },
      "summary":"Create a directory, including all missing parent directories.",
      "name":"make_directories",
      "modifiers":{
        "return":[[]],
        "param":{
          "1":{
            "type":"string"
          },
          "dir":{
            "type":"string"
          }
        },
        "field":{
          "1":{
            "type":"string"
          },
          "dir":{
            "type":"string"
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(dir)",
      "tags":[],
      "lineno":30
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"path",
        "map":{
          "path":" The path whose parents should be created."
        }
      },
      "summary":"Create all parent directories for a given path.",
      "name":"make_parent_directories",
      "modifiers":{
        "return":[[]],
        "param":{
          "1":{
            "type":"string"
          },
          "path":{
            "type":"string"
          }
        },
        "field":{
          "1":{
            "type":"string"
          },
          "path":{
            "type":"string"
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(path)",
      "tags":[],
      "lineno":43
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"filename",
        "map":{
          "filename":" The file path."
        }
      },
      "summary":"Check if a file exists, is readable and not a directory.",
      "name":"file_readable",
      "modifiers":{
        "return":[{
            "type":"boolean"
          }],
        "param":{
          "1":{
            "type":"string"
          },
          "filename":{
            "type":"string"
          }
        },
        "field":{
          "1":{
            "type":"string"
          },
          "filename":{
            "type":"string"
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(filename)",
      "tags":[],
      "lineno":51
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"filename",
        "map":{
          "filename":" The file path."
        }
      },
      "summary":"Check if a file exists, is executable and not a directory.",
      "name":"file_executable",
      "modifiers":{
        "return":[{
            "type":"boolean"
          }],
        "param":{
          "1":{
            "type":"string"
          },
          "filename":{
            "type":"string"
          }
        },
        "field":{
          "1":{
            "type":"string"
          },
          "filename":{
            "type":"string"
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(filename)",
      "tags":[],
      "lineno":63
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"path",
        "map":{
          "path":" The directory path."
        }
      },
      "summary":"Check if a path exists, is readable and a directory.",
      "name":"dir_readable",
      "modifiers":{
        "return":[{
            "type":"boolean"
          }],
        "param":{
          "1":{
            "type":"string"
          },
          "path":{
            "type":"string"
          }
        },
        "field":{
          "1":{
            "type":"string"
          },
          "path":{
            "type":"string"
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(path)",
      "tags":[],
      "lineno":75
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"path",
        "map":{
          "path":" The directory path"
        }
      },
      "summary":"Check if a path is a directory.",
      "name":"is_dir",
      "modifiers":{
        "return":[{
            "type":"boolean"
          }],
        "param":{
          "1":{
            "type":"string"
          },
          "path":{
            "type":"string"
          }
        },
        "field":{
          "1":{
            "type":"string"
          },
          "path":{
            "type":"string"
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(path)",
      "tags":[],
      "lineno":87
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Get the config home according to the XDG basedir specification.",
      "name":"get_xdg_config_home",
      "modifiers":{
        "field":[],
        "return":[[]]
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"()",
      "tags":[],
      "lineno":94
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Get the cache home according to the XDG basedir specification.",
      "name":"get_xdg_cache_home",
      "modifiers":{
        "field":[],
        "return":[[]]
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"()",
      "tags":[],
      "lineno":101
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Get the data home according to the XDG basedir specification.",
      "name":"get_xdg_data_home",
      "modifiers":{
        "field":[],
        "return":[{
            "type":"string"
          }]
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"()",
      "tags":[],
      "lineno":108
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Get the data dirs according to the XDG basedir specification.",
      "name":"get_xdg_data_dirs",
      "modifiers":{
        "field":[],
        "return":[{
            "type":"table"
          }]
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"()",
      "tags":[],
      "lineno":115
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Get the path to the user's config dir.",
      "name":"get_configuration_dir",
      "modifiers":{
        "field":[],
        "return":[[]]
      },
      "description":"\n This is the directory containing the configuration file (\"rc.lua\").",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"()",
      "tags":[],
      "lineno":126
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Get the path to a directory that should be used for caching data.",
      "name":"get_cache_dir",
      "modifiers":{
        "field":[],
        "return":[[]]
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"()",
      "tags":[],
      "lineno":133
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Get the path to the directory where themes are installed.",
      "name":"get_themes_dir",
      "modifiers":{
        "field":[],
        "return":[[]]
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"()",
      "tags":[],
      "lineno":142
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Get the path to the directory where our icons are installed.",
      "name":"get_awesome_icon_dir",
      "modifiers":{
        "field":[],
        "return":[[]]
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"()",
      "tags":[],
      "lineno":149
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"d",
        "map":{
          "d":" The directory to get (either \"config\" or \"cache\")."
        }
      },
      "summary":"Get the user's config or cache dir.",
      "name":"get_dir",
      "modifiers":{
        "return":[[]],
        "param":{
          "1":[],
          "d":[]
        },
        "field":{
          "1":[],
          "d":[]
        }
      },
      "description":"\n It first checks XDG_CONFIG_HOME / XDG_CACHE_HOME, but then goes with the\n default paths.",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(d)",
      "tags":[],
      "lineno":159
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"path",
        "2":"exts",
        "3":"absolute_path",
        "map":{
          "absolute_path":" Return the absolute path instead of the filename.",
          "path":" The directory to search.",
          "exts":" Specific extensions to limit the search to. eg:`{ \"jpg\", \"png\" }`\n   If ommited, all files are considered."
        }
      },
      "summary":"Get the name of a random file from a given directory.",
      "name":"get_random_file_from_dir",
      "modifiers":{
        "return":[{
            "type":"string|nil"
          }],
        "param":{
          "1":{
            "type":"string"
          },
          "2":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "3":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "absolute_path":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "path":{
            "type":"string"
          },
          "exts":{
            "optchain":true,
            "type":"table",
            "opt":true
          }
        },
        "field":{
          "1":{
            "type":"string"
          },
          "2":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "3":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "absolute_path":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "path":{
            "type":"string"
          },
          "exts":{
            "optchain":true,
            "type":"table",
            "opt":true
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(path[, exts[, absolute_path=false]])",
      "tags":[],
      "lineno":180
    }],
  "type":"utillib",
  "file":"/home/cji/portless/awesome/build/lib/gears/filesystem.lua",
  "package":"",
  "tags":[],
  "lineno":7
}