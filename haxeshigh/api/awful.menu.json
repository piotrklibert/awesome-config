{
  "inferred":true,
  "kind":"popups_and_bars",
  "mod_name":"awful.menu",
  "summary":"A menu for awful.",
  "sections":{
    "by_name":[]
  },
  "name":"awful.menu",
  "modifiers":{
    "copyright":[],
    "author":[[],[],[]]
  },
  "description":"",
  "items":[{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"menu_submenu_icon",
        "map":{
          "menu_submenu_icon":""
        }
      },
      "summary":"The icon used for sub-menus.",
      "name":"beautiful.menu_submenu_icon",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"string|gears.surface"
          },
          "menu_submenu_icon":{
            "type":"string|gears.surface"
          }
        },
        "field":{
          "1":{
            "type":"string|gears.surface"
          },
          "menu_submenu_icon":{
            "type":"string|gears.surface"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(menu_submenu_icon)",
      "tags":[],
      "lineno":55
    },{
      "parameter":"field",
      "params":{
        "1":"string",
        "map":{
          "string":""
        }
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "param":{
          "1":[],
          "string":[]
        },
        "field":{
          "1":[],
          "string":[]
        }
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"beautiful",
      "inferred":true,
      "subparams":[],
      "summary":"The menu text font.",
      "name":"beautiful.menu_font",
      "type":"beautiful",
      "args":"(string)",
      "kind":"theme variables",
      "lineno":60
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"menu_height",
        "map":{
          "menu_height":""
        }
      },
      "summary":"The item height.",
      "name":"beautiful.menu_height",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":"16",
            "type":"number",
            "opt":"16"
          },
          "menu_height":{
            "optchain":"16",
            "type":"number",
            "opt":"16"
          }
        },
        "field":{
          "1":{
            "optchain":"16",
            "type":"number",
            "opt":"16"
          },
          "menu_height":{
            "optchain":"16",
            "type":"number",
            "opt":"16"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"([menu_height=16])",
      "tags":[],
      "lineno":64
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"menu_width",
        "map":{
          "menu_width":""
        }
      },
      "summary":"The default menu width.",
      "name":"beautiful.menu_width",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":"100",
            "type":"number",
            "opt":"100"
          },
          "menu_width":{
            "optchain":"100",
            "type":"number",
            "opt":"100"
          }
        },
        "field":{
          "1":{
            "optchain":"100",
            "type":"number",
            "opt":"100"
          },
          "menu_width":{
            "optchain":"100",
            "type":"number",
            "opt":"100"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"([menu_width=100])",
      "tags":[],
      "lineno":68
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"menu_border_color",
        "map":{
          "menu_border_color":""
        }
      },
      "summary":"The menu item border color.",
      "name":"beautiful.menu_border_color",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":"0",
            "type":"number",
            "opt":"0"
          },
          "menu_border_color":{
            "optchain":"0",
            "type":"number",
            "opt":"0"
          }
        },
        "field":{
          "1":{
            "optchain":"0",
            "type":"number",
            "opt":"0"
          },
          "menu_border_color":{
            "optchain":"0",
            "type":"number",
            "opt":"0"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"([menu_border_color=0])",
      "tags":[],
      "lineno":72
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"menu_border_width",
        "map":{
          "menu_border_width":""
        }
      },
      "summary":"The menu item border width.",
      "name":"beautiful.menu_border_width",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":"0",
            "type":"number",
            "opt":"0"
          },
          "menu_border_width":{
            "optchain":"0",
            "type":"number",
            "opt":"0"
          }
        },
        "field":{
          "1":{
            "optchain":"0",
            "type":"number",
            "opt":"0"
          },
          "menu_border_width":{
            "optchain":"0",
            "type":"number",
            "opt":"0"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"([menu_border_width=0])",
      "tags":[],
      "lineno":76
    },{
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"beautiful",
      "inferred":true,
      "subparams":[],
      "summary":"The default focused item foreground (text) color.",
      "name":"beautiful.menu_fg_focus",
      "type":"beautiful",
      "args":"(color)",
      "kind":"theme variables",
      "lineno":81
    },{
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"beautiful",
      "inferred":true,
      "subparams":[],
      "summary":"The default focused item background color.",
      "name":"beautiful.menu_bg_focus",
      "type":"beautiful",
      "args":"(color)",
      "kind":"theme variables",
      "lineno":86
    },{
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"beautiful",
      "inferred":true,
      "subparams":[],
      "summary":"The default foreground (text) color.",
      "name":"beautiful.menu_fg_normal",
      "type":"beautiful",
      "args":"(color)",
      "kind":"theme variables",
      "lineno":91
    },{
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"beautiful",
      "inferred":true,
      "subparams":[],
      "summary":"The default background color.",
      "name":"beautiful.menu_bg_normal",
      "type":"beautiful",
      "args":"(color)",
      "kind":"theme variables",
      "lineno":96
    },{
      "parameter":"field",
      "params":{
        "1":"menu_submenu",
        "map":{
          "menu_submenu":" The sub-menu text."
        }
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "param":{
          "1":{
            "optchain":"\"▶\"",
            "type":"string",
            "opt":"\"▶\""
          },
          "menu_submenu":{
            "optchain":"\"▶\"",
            "type":"string",
            "opt":"\"▶\""
          }
        },
        "field":{
          "1":{
            "optchain":"\"▶\"",
            "type":"string",
            "opt":"\"▶\""
          },
          "menu_submenu":{
            "optchain":"\"▶\"",
            "type":"string",
            "opt":"\"▶\""
          }
        }
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"beautiful",
      "inferred":true,
      "subparams":[],
      "summary":"The default sub-menu indicator if no menu_submenu_icon is provided.",
      "name":"beautiful.menu_submenu",
      "type":"beautiful",
      "args":"([menu_submenu=\"▶\"])",
      "kind":"theme variables",
      "lineno":101
    },{
      "parameter":"field",
      "params":{
        "1":"up",
        "2":"k",
        "map":{
          "k":"",
          "up":""
        }
      },
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":"\n Keys are: up, down, exec, enter, back, close. Value are table with a list of valid\n keys for the action, i.e. menu_keys.up =  { \"j\", \"k\" } will bind 'j' and 'k'\n key to up action. This is common to all created menu.",
      "tags":[],
      "section":"table",
      "inferred":true,
      "subparams":[],
      "summary":"Key bindings for menu navigation.",
      "name":"menu_keys",
      "kind":"tables",
      "lineno":107,
      "args":"(up, k)",
      "type":"table"
    },{
      "inferred":true,
      "subparams":{
        "args":["args.coords"]
      },
      "parameter":"field",
      "params":{
        "1":"args",
        "map":{
          "args.coords":" Menu position defaulting to mouse.coords()",
          "args":" The arguments"
        }
      },
      "summary":"Show a menu.",
      "name":"show",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "2":[],
          "args.coords":[],
          "args":[]
        },
        "field":{
          "1":[],
          "2":[],
          "args.coords":[],
          "args":[]
        }
      },
      "description":"",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"(args)",
      "tags":[],
      "lineno":363
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Hide a menu popup.",
      "name":"hide",
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":"",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"()",
      "tags":[],
      "lineno":377
    },{
      "inferred":true,
      "subparams":{
        "args":["args.coords"]
      },
      "parameter":"field",
      "params":{
        "1":"args",
        "map":{
          "args.coords":" Menu position {x,y}",
          "args":" The arguments"
        }
      },
      "summary":"Toggle menu visibility.",
      "name":"toggle",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "2":[],
          "args.coords":[],
          "args":[]
        },
        "field":{
          "1":[],
          "2":[],
          "args.coords":[],
          "args":[]
        }
      },
      "description":"",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"(args)",
      "tags":[],
      "lineno":396
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Update menu content.",
      "name":"update",
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":"",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"()",
      "tags":[],
      "lineno":406
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Get the elder parent so for example when you kill\n it, it will destroy the whole family.",
      "name":"get_root",
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":"",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"()",
      "tags":[],
      "lineno":416
    },{
      "inferred":true,
      "subparams":{
        "args":["args.new","args.theme"]
      },
      "parameter":"field",
      "params":{
        "1":"args",
        "2":"index",
        "map":{
          "args.theme":" The menu entry theme.",
          "args":" The item params",
          "args.new":" (Default: awful.menu.entry) The menu entry constructor.",
          "index":" The index where the new entry will inserted."
        }
      },
      "summary":"Add a new menu entry.",
      "name":"add",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "2":[],
          "3":{
            "opt":true
          },
          "4":{
            "opt":true
          },
          "args.theme":{
            "opt":true
          },
          "args":[],
          "args.new":[],
          "index":{
            "opt":true
          }
        },
        "field":{
          "1":[],
          "2":[],
          "3":{
            "opt":true
          },
          "4":{
            "opt":true
          },
          "args.theme":{
            "opt":true
          },
          "args":[],
          "args.new":[],
          "index":{
            "opt":true
          }
        }
      },
      "description":"\n args.* params needed for the menu entry constructor.",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"(args, index)",
      "tags":[],
      "lineno":427
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"num",
        "map":{
          "num":" The position in the table of the menu entry to be deleted; can be also the menu entry itself."
        }
      },
      "summary":"Delete menu entry at given position.",
      "name":"delete",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "num":[]
        },
        "field":{
          "1":[],
          "num":[]
        }
      },
      "description":"",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"(num)",
      "tags":[],
      "lineno":484
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"args",
        "2":"item_args",
        "3":"filter",
        "map":{
          "item_args":" Table that will be merged into each item, see\n   `new()` for more information.",
          "args":" Menu table, see `new()` for more information.",
          "filter":" A function taking a client as an argument and\n   returning `true` or `false` to indicate whether the client should be\n   included in the menu."
        }
      },
      "summary":"Build a popup menu with running clients and show it.",
      "name":"clients",
      "modifiers":{
        "field":{
          "1":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "2":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "3":{
            "optchain":true,
            "type":"func",
            "opt":true
          },
          "item_args":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "args":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "filter":{
            "optchain":true,
            "type":"func",
            "opt":true
          }
        },
        "return":[[]],
        "param":{
          "1":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "2":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "3":{
            "optchain":true,
            "type":"func",
            "opt":true
          },
          "item_args":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "args":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "filter":{
            "optchain":true,
            "type":"func",
            "opt":true
          }
        },
        "request":[[]]
      },
      "description":"",
      "type":"constructorfct",
      "section":"constructorfct",
      "kind":"constructors",
      "args":"([args[, item_args[, filter]]])",
      "tags":{
        "request":["client activate menu.clients granted When clicking on a clients menu\n  element."]
      },
      "lineno":526
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"args",
        "2":"item_args",
        "3":"filter",
        "map":{
          "item_args":" Table that will be merged into each item, see\n   `new()` for more information.",
          "args":" Menu table, see `new()` for more information.",
          "filter":" A function taking a client as an argument and\n   returning `true` or `false` to indicate whether the client should be\n   included in the menu."
        }
      },
      "summary":"Use menu.clients to build and open the client menu if it isn't already open.",
      "name":"client_list",
      "modifiers":{
        "return":[[]],
        "param":{
          "1":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "2":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "3":{
            "optchain":true,
            "type":"func",
            "opt":true
          },
          "item_args":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "args":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "filter":{
            "optchain":true,
            "type":"func",
            "opt":true
          }
        },
        "field":{
          "1":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "2":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "3":{
            "optchain":true,
            "type":"func",
            "opt":true
          },
          "item_args":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "args":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "filter":{
            "optchain":true,
            "type":"func",
            "opt":true
          }
        }
      },
      "description":"\n Close the client menu if it is already open.\n See `awful.menu.clients` for more information.",
      "type":"constructorfct",
      "section":"constructorfct",
      "kind":"constructors",
      "args":"([args[, item_args[, filter]]])",
      "tags":[],
      "lineno":569
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"parent",
        "2":"args",
        "map":{
          "args":" the item params",
          "parent":" The parent menu (TODO: This is apparently unused)"
        }
      },
      "summary":"Default awful.menu.entry constructor.",
      "name":"entry",
      "modifiers":{
        "return":[[]],
        "param":{
          "1":[],
          "2":[],
          "args":[],
          "parent":[]
        },
        "field":{
          "1":[],
          "2":[],
          "args":[],
          "parent":[]
        }
      },
      "description":"",
      "type":"constructorfct",
      "section":"constructorfct",
      "kind":"constructors",
      "args":"(parent, args)",
      "tags":[],
      "lineno":586
    },{
      "parameter":"field",
      "params":{
        "1":"args",
        "2":"parent",
        "map":{
          "parent":" Specify the parent menu if we want to open a submenu, this value should never be set by the user.",
          "args":" Table containing the menu information.\n\n * Key items: Table containing the displayed items. Each element is a table by default (when element 'new' is\n   awful.menu.entry) containing: item name, triggered action (submenu table or function), item icon (optional).\n * Keys theme.[fg|bg]_[focus|normal], theme.border_color, theme.border_width, theme.submenu_icon, theme.height\n   and theme.width override the default display for your menu and/or of your menu entry, each of them are optional.\n * Key auto_expand controls the submenu auto expand behaviour by setting it to true (default) or false.\n"
        }
      },
      "modifiers":{
        "field":{
          "1":[],
          "2":[],
          "parent":[],
          "args":[]
        },
        "return":[],
        "param":{
          "1":[],
          "2":[],
          "parent":[],
          "args":[]
        },
        "usage":[[]]
      },
      "description":"",
      "tags":[],
      "section":"constructorfct",
      "inferred":true,
      "subparams":[],
      "summary":"Create a menu popup.",
      "name":"awful.menu",
      "kind":"constructors",
      "usage":["-- The following function builds and shows a menu of clients that match\n-- a particular rule.\n-- Bound to a key, it can be used to select from dozens of terminals open on\n-- several tags.\n-- When using @{ruled.client.match_any} instead of @{ruled.client.match},\n-- a menu of clients with different classes could be build.\n\nfunction terminal_menu ()\n  terms = {}\n  for i, c in pairs(client.get()) do\n    if ruled.client.match(c, {class = \"URxvt\"}) then\n      terms[i] =\n        {c.name,\n         function()\n           c.first_tag:view_only()\n           client.focus = c\n         end,\n         c.icon\n        }\n    end\n  end\n  awful.menu(terms):show()\nend\n"],
      "args":"(args, parent)",
      "type":"constructorfct",
      "lineno":709
    }],
  "type":"popupmod",
  "file":"/home/cji/portless/awesome/build/lib/awful/menu.lua",
  "package":"",
  "tags":{
    "author":["Damien Leone &lt;damien.leone@gmail.com&gt;","Julien Danjou &lt;julien@danjou.info&gt;","dodo"],
    "copyright":"2008, 2011 Damien Leone, Julien Danjou, dodo"
  },
  "lineno":11
}