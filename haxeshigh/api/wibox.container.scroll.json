{
  "inferred":true,
  "kind":"widget_containers",
  "mod_name":"wibox.container.scroll",
  "summary":"This container scrolls its inner widget inside of the available space.",
  "sections":{
    "by_name":[]
  },
  "name":"wibox.container.scroll",
  "modifiers":{
    "usage":[[]],
    "author":[[]],
    "supermodule":[[]],
    "copyright":[]
  },
  "description":" An\n example usage would be a text widget that displays information about the\n currently playing song without using too much space for long song titles.\n\n Please note that mouse events do not propagate to widgets inside of the\n scroll container. Also, if this widget is causing too high CPU usage, you can\n use @{set_fps} to make it update less often.",
  "items":[{
      "parameter":"field",
      "params":{
        "map":[]
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "field":[]
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"method",
      "inferred":true,
      "subparams":[],
      "summary":"Pause the scrolling animation.",
      "name":"pause",
      "type":"method",
      "args":"()",
      "kind":"object methods ",
      "lineno":226
    },{
      "parameter":"field",
      "params":{
        "map":[]
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "field":[]
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"method",
      "inferred":true,
      "subparams":[],
      "summary":"Continue the scrolling animation.",
      "name":"continue",
      "type":"method",
      "args":"()",
      "kind":"object methods ",
      "lineno":237
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Reset the scrolling state to its initial condition.",
      "name":"reset_scrolling",
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":"\n For must scroll step functions, the effect of this function should be to\n display the widget without any scrolling applied.\n This function does not undo the effect of @{pause}.",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"()",
      "tags":[],
      "lineno":251
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"dir",
        "map":{
          "dir":" Either \"h\" for horizontal scrolling or \"v\" for vertical scrolling"
        }
      },
      "summary":"Set the direction in which this widget scroll.",
      "name":"set_direction",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "dir":[]
        },
        "field":{
          "1":[],
          "dir":[]
        }
      },
      "description":"",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"(dir)",
      "tags":[],
      "lineno":261
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"widget",
        "map":{
          "widget":" The widget"
        }
      },
      "summary":"The widget to be scrolled.",
      "name":"widget",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"widget"
          },
          "widget":{
            "type":"widget"
          }
        },
        "field":{
          "1":{
            "type":"widget"
          },
          "widget":{
            "type":"widget"
          }
        }
      },
      "description":"",
      "type":"property",
      "section":"property",
      "kind":"object properties",
      "args":"(widget)",
      "tags":[],
      "lineno":277
    },{
      "parameter":"field",
      "params":{
        "1":"expand",
        "map":{
          "expand":" If true, the widget is expanded to include the extra\n space. If false, the extra space is simply left empty."
        }
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "param":{
          "1":{
            "type":"boolean"
          },
          "expand":{
            "type":"boolean"
          }
        },
        "field":{
          "1":{
            "type":"boolean"
          },
          "expand":{
            "type":"boolean"
          }
        }
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"method",
      "inferred":true,
      "subparams":[],
      "summary":"Specify the expand mode that is used for extra space.",
      "name":"set_expand",
      "type":"method",
      "args":"(expand)",
      "kind":"object methods ",
      "lineno":310
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"fps",
        "map":{
          "fps":" The number of frames per second"
        }
      },
      "summary":"Set the number of frames per second that this widget should draw.",
      "name":"set_fps",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"number"
          },
          "fps":{
            "type":"number"
          }
        },
        "field":{
          "1":{
            "type":"number"
          },
          "fps":{
            "type":"number"
          }
        }
      },
      "description":"",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"(fps)",
      "tags":[],
      "lineno":321
    },{
      "parameter":"field",
      "params":{
        "1":"extra_space",
        "map":{
          "extra_space":" The amount of extra space"
        }
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "param":{
          "1":{
            "type":"number"
          },
          "extra_space":{
            "type":"number"
          }
        },
        "field":{
          "1":{
            "type":"number"
          },
          "extra_space":{
            "type":"number"
          }
        }
      },
      "description":" This\n extra space will likely be left empty between repetitions of the widgets.",
      "tags":{
        "see":[]
      },
      "section":"method",
      "inferred":true,
      "subparams":[],
      "summary":"Set the amount of extra space that should be included in the scrolling.",
      "name":"set_extra_space",
      "type":"method",
      "args":"(extra_space)",
      "kind":"object methods ",
      "lineno":335
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"speed",
        "map":{
          "speed":" The speed for the animation"
        }
      },
      "summary":"Set the speed of the scrolling animation.",
      "name":"set_speed",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"number"
          },
          "speed":{
            "type":"number"
          }
        },
        "field":{
          "1":{
            "type":"number"
          },
          "speed":{
            "type":"number"
          }
        }
      },
      "description":" The exact meaning depends on the\n step function that is used, but for the simplest step functions, this will be\n in pixels per second.",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"(speed)",
      "tags":[],
      "lineno":348
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"max_size",
        "map":{
          "max_size":" The maximum size of this widget or nil for unlimited."
        }
      },
      "summary":"Set the maximum size of this widget in the direction set by\n @{set_direction}.",
      "name":"set_max_size",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"number"
          },
          "max_size":{
            "type":"number"
          }
        },
        "field":{
          "1":{
            "type":"number"
          },
          "max_size":{
            "type":"number"
          }
        }
      },
      "description":" If the child widget is smaller than this size, no scrolling\n is done. If the child widget is larger, then only this size will be visible\n and the rest is made visible via scrolling.",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"(max_size)",
      "tags":[],
      "lineno":362
    },{
      "parameter":"field",
      "params":{
        "1":"step_function",
        "map":{
          "step_function":" A step function."
        }
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "param":{
          "1":{
            "type":"function"
          },
          "step_function":{
            "type":"function"
          }
        },
        "field":{
          "1":{
            "type":"function"
          },
          "step_function":{
            "type":"function"
          }
        }
      },
      "description":"\n The step function is called with five arguments:\n\n * The time in seconds since the state of the animation\n * The size of the child widget\n * The size of the visible part of the widget\n * The speed of the animation. This should have a linear effect on this\n   function's behaviour.\n * The extra space configured by @{set_extra_space}. This was not yet added to\n   the size of the child widget, but should likely be added to it in most\n   cases.\n\n The step function should return a single number. This number is the offset at\n which the widget is drawn and should be between 0 and `size+extra_space`.",
      "tags":{
        "see":[]
      },
      "section":"method",
      "inferred":true,
      "subparams":[],
      "summary":"Set the step function that determines the exact behaviour of the scrolling\n animation.",
      "name":"set_step_function",
      "type":"method",
      "args":"(step_function)",
      "kind":"object methods ",
      "lineno":388
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"space_for_scrolling",
        "map":{
          "space_for_scrolling":" The space for scrolling"
        }
      },
      "summary":"Set an upper limit for the space for scrolling.",
      "name":"set_space_for_scrolling",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"number"
          },
          "space_for_scrolling":{
            "type":"number"
          }
        },
        "field":{
          "1":{
            "type":"number"
          },
          "space_for_scrolling":{
            "type":"number"
          }
        }
      },
      "description":"\n This restricts the child widget's maximal size.",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"(space_for_scrolling)",
      "tags":[],
      "lineno":402
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"widget",
        "2":"fps",
        "3":"speed",
        "4":"extra_space",
        "5":"expand",
        "6":"max_size",
        "7":"step_function",
        "8":"space_for_scrolling",
        "map":{
          "extra_space":" The amount of extra space to include",
          "space_for_scrolling":" The space for scrolling",
          "expand":" Should the widget be expanded to include the\n extra space?",
          "max_size":" The maximum size of the child widget",
          "fps":" The number of frames per second",
          "widget":" The widget that should be scrolled",
          "step_function":" The step function to be used",
          "speed":" The speed of the animation"
        }
      },
      "summary":"Get a new horizontal scrolling container.",
      "name":"horizontal",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":true,
            "opt":true
          },
          "2":{
            "optchain":"20",
            "opt":"20"
          },
          "3":{
            "optchain":"10",
            "opt":"10"
          },
          "4":{
            "optchain":"0",
            "opt":"0"
          },
          "5":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "6":{
            "optchain":true,
            "opt":true
          },
          "7":{
            "optchain":"step_functions.linear_increase",
            "opt":"step_functions.linear_increase"
          },
          "8":{
            "optchain":"2^1024",
            "opt":"2^1024"
          },
          "extra_space":{
            "optchain":"0",
            "opt":"0"
          },
          "space_for_scrolling":{
            "optchain":"2^1024",
            "opt":"2^1024"
          },
          "expand":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "max_size":{
            "optchain":true,
            "opt":true
          },
          "fps":{
            "optchain":"20",
            "opt":"20"
          },
          "widget":{
            "optchain":true,
            "opt":true
          },
          "step_function":{
            "optchain":"step_functions.linear_increase",
            "opt":"step_functions.linear_increase"
          },
          "speed":{
            "optchain":"10",
            "opt":"10"
          }
        },
        "field":{
          "1":{
            "optchain":true,
            "opt":true
          },
          "2":{
            "optchain":"20",
            "opt":"20"
          },
          "3":{
            "optchain":"10",
            "opt":"10"
          },
          "4":{
            "optchain":"0",
            "opt":"0"
          },
          "5":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "6":{
            "optchain":true,
            "opt":true
          },
          "7":{
            "optchain":"step_functions.linear_increase",
            "opt":"step_functions.linear_increase"
          },
          "8":{
            "optchain":"2^1024",
            "opt":"2^1024"
          },
          "extra_space":{
            "optchain":"0",
            "opt":"0"
          },
          "space_for_scrolling":{
            "optchain":"2^1024",
            "opt":"2^1024"
          },
          "expand":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "max_size":{
            "optchain":true,
            "opt":true
          },
          "fps":{
            "optchain":"20",
            "opt":"20"
          },
          "widget":{
            "optchain":true,
            "opt":true
          },
          "step_function":{
            "optchain":"step_functions.linear_increase",
            "opt":"step_functions.linear_increase"
          },
          "speed":{
            "optchain":"10",
            "opt":"10"
          }
        }
      },
      "description":"",
      "type":"constructorfct",
      "section":"constructorfct",
      "kind":"constructors",
      "args":"([widget[, fps=20[, speed=10[, extra_space=0[, expand=false[, max_size[, step_function=step_functions.linear_increase[, space_for_scrolling=2^1024]]]]]]]])",
      "tags":[],
      "lineno":443
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"widget",
        "2":"fps",
        "3":"speed",
        "4":"extra_space",
        "5":"expand",
        "6":"max_size",
        "7":"step_function",
        "8":"space_for_scrolling",
        "map":{
          "extra_space":" The amount of extra space to include",
          "space_for_scrolling":" The space for scrolling",
          "expand":" Should the widget be expanded to include the\n extra space?",
          "max_size":" The maximum size of the child widget",
          "fps":" The number of frames per second",
          "widget":" The widget that should be scrolled",
          "step_function":" The step function to be used",
          "speed":" The speed of the animation"
        }
      },
      "summary":"Get a new vertical scrolling container.",
      "name":"vertical",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":true,
            "opt":true
          },
          "2":{
            "optchain":"20",
            "opt":"20"
          },
          "3":{
            "optchain":"10",
            "opt":"10"
          },
          "4":{
            "optchain":"0",
            "opt":"0"
          },
          "5":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "6":{
            "optchain":true,
            "opt":true
          },
          "7":{
            "optchain":"step_functions.linear_increase",
            "opt":"step_functions.linear_increase"
          },
          "8":{
            "optchain":"2^1024",
            "opt":"2^1024"
          },
          "extra_space":{
            "optchain":"0",
            "opt":"0"
          },
          "space_for_scrolling":{
            "optchain":"2^1024",
            "opt":"2^1024"
          },
          "expand":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "max_size":{
            "optchain":true,
            "opt":true
          },
          "fps":{
            "optchain":"20",
            "opt":"20"
          },
          "widget":{
            "optchain":true,
            "opt":true
          },
          "step_function":{
            "optchain":"step_functions.linear_increase",
            "opt":"step_functions.linear_increase"
          },
          "speed":{
            "optchain":"10",
            "opt":"10"
          }
        },
        "field":{
          "1":{
            "optchain":true,
            "opt":true
          },
          "2":{
            "optchain":"20",
            "opt":"20"
          },
          "3":{
            "optchain":"10",
            "opt":"10"
          },
          "4":{
            "optchain":"0",
            "opt":"0"
          },
          "5":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "6":{
            "optchain":true,
            "opt":true
          },
          "7":{
            "optchain":"step_functions.linear_increase",
            "opt":"step_functions.linear_increase"
          },
          "8":{
            "optchain":"2^1024",
            "opt":"2^1024"
          },
          "extra_space":{
            "optchain":"0",
            "opt":"0"
          },
          "space_for_scrolling":{
            "optchain":"2^1024",
            "opt":"2^1024"
          },
          "expand":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "max_size":{
            "optchain":true,
            "opt":true
          },
          "fps":{
            "optchain":"20",
            "opt":"20"
          },
          "widget":{
            "optchain":true,
            "opt":true
          },
          "step_function":{
            "optchain":"step_functions.linear_increase",
            "opt":"step_functions.linear_increase"
          },
          "speed":{
            "optchain":"10",
            "opt":"10"
          }
        }
      },
      "description":"",
      "type":"constructorfct",
      "section":"constructorfct",
      "kind":"constructors",
      "args":"([widget[, fps=20[, speed=10[, extra_space=0[, expand=false[, max_size[, step_function=step_functions.linear_increase[, space_for_scrolling=2^1024]]]]]]]])",
      "tags":[],
      "lineno":458
    },{
      "parameter":"field",
      "params":{
        "map":[]
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "field":[]
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"table",
      "inferred":true,
      "subparams":[],
      "summary":"A selection of step functions",
      "name":"scroll.step_functions",
      "kind":"tables",
      "lineno":464,
      "args":"()",
      "type":"table"
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"A step function that scrolls the widget in an increasing direction with\n constant speed.",
      "name":"scroll.step_functions.linear_increase",
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":"",
      "type":"callback",
      "section":"callback",
      "kind":"callback functions prototype",
      "args":"()",
      "tags":[],
      "lineno":469
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"A step function that scrolls the widget in an decreasing direction with\n constant speed.",
      "name":"scroll.step_functions.linear_decrease",
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":"",
      "type":"callback",
      "section":"callback",
      "kind":"callback functions prototype",
      "args":"()",
      "tags":[],
      "lineno":476
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"A step function that scrolls the widget to its end and back to its\n beginning, then back to its end, etc.",
      "name":"scroll.step_functions.linear_back_and_forth",
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":" The speed is constant.",
      "type":"callback",
      "section":"callback",
      "kind":"callback functions prototype",
      "args":"()",
      "tags":[],
      "lineno":483
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"A step function that scrolls the widget to its end and back to its\n beginning, then back to its end, etc.",
      "name":"scroll.step_functions.nonlinear_back_and_forth",
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":" The speed is null at the ends and\n maximal in the middle.",
      "type":"callback",
      "section":"callback",
      "kind":"callback functions prototype",
      "args":"()",
      "tags":[],
      "lineno":493
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"A step function that scrolls the widget to its end and back to its\n beginning, then back to its end, etc.",
      "name":"scroll.step_functions.waiting_nonlinear_back_and_forth",
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":" The speed is null at the ends and\n maximal in the middle. At both ends the widget stands still for a moment.",
      "type":"callback",
      "section":"callback",
      "kind":"callback functions prototype",
      "args":"()",
      "tags":[],
      "lineno":522
    }],
  "type":"containermod",
  "usage":["wibox.widget {\n   layout = wibox.container.scroll.horizontal,\n   max_size = 100,\n   step_function = wibox.container.scroll.step_functions\n                   .waiting_nonlinear_back_and_forth,\n   speed = 100,\n   {\n       widget = wibox.widget.textbox,\n       text = \"This is a \" .. string.rep(\"very, \", 10) ..  \" very long text\",\n   },\n}\n"],
  "file":"/home/cji/portless/awesome/build/lib/wibox/container/scroll.lua",
  "package":"",
  "tags":{
    "author":["Uli Schlachter (based on ideas from Saleur Geoffrey)"],
    "copyright":"2015 Uli Schlachter",
    "supermodule":["wibox.widget.base"]
  },
  "lineno":27
}