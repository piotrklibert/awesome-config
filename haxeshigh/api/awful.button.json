{
  "inferred":true,
  "kind":"input_handling",
  "mod_name":"awful.button",
  "summary":"Create easily new buttons objects ignoring certain modifiers.",
  "sections":{
    "by_name":[]
  },
  "name":"awful.button",
  "modifiers":{
    "copyright":[[],[]],
    "author":[[],[]]
  },
  "description":"",
  "items":[{
      "parameter":"field",
      "params":{
        "1":"Lock",
        "2":"Mod2",
        "map":{
          "Mod2":"",
          "Lock":""
        }
      },
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":"\n\n By default this is initialized as `{ \"Lock\", \"Mod2\" }`\n so the `Caps Lock` or `Num Lock` modifier are not taking into account by awesome\n when pressing keys.\n",
      "tags":[],
      "section":"table",
      "inferred":true,
      "subparams":[],
      "summary":"Modifiers to ignore.",
      "name":"ignore_modifiers",
      "kind":"tables",
      "lineno":35,
      "args":"(Lock, Mod2)",
      "type":"table"
    },{
      "parameter":"field",
      "params":{
        "1":"LEFT",
        "2":"MIDDLE",
        "3":"RIGHT",
        "4":"SCROLL_UP",
        "5":"SCROLL_DOWN",
        "map":{
          "SCROLL_UP":"A scroll up increment.",
          "SCROLL_DOWN":"A scroll down increment.",
          "MIDDLE":"The scrollwheel button.",
          "LEFT":"The left mouse button.",
          "RIGHT":"The context menu button."
        }
      },
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":"\n\n It can be used instead of the button ids.\n",
      "tags":[],
      "section":"table",
      "inferred":true,
      "subparams":[],
      "summary":"The mouse buttons names.",
      "name":"names",
      "kind":"tables",
      "lineno":42,
      "args":"(LEFT, MIDDLE, RIGHT, SCROLL_UP, SCROLL_DOWN)",
      "type":"table"
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"The table of modifier keys.",
      "name":"modifiers",
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":"\n\n A modifier, such as `Control` are a predetermined set of keys that can be\n used to implement keybindings. Note that this list is fix and cannot be\n extended using random key names, code or characters.\n\n Common modifiers are:\n\n <table class='widget_list' border=1>\n  <tr style='font-weight: bold;'>\n   <th align='center'>Name</th>\n   <th align='center'>Description</th>\n  </tr>\n  <tr><td>Mod1</td><td>Usually called Alt on PCs and Option on Macs</td></tr>\n  <tr><td>Mod4</td><td>Also called Super, Windows and Command âŒ˜</td></tr>\n  <tr><td>Mod5</td><td>Also called AltGr or ISO Level 3</td></tr>\n  <tr><td>Shift</td><td>Both left and right shift keys</td></tr>\n  <tr><td>Control</td><td>Also called CTRL on some keyboards</td></tr>\n </table>\n\n Please note that Awesome ignores the status of \"Lock\" and \"Mod2\" (Num Lock).\n",
      "type":"property",
      "section":"property",
      "kind":"object properties",
      "args":"()",
      "tags":[],
      "lineno":74
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"integer",
        "map":{
          "integer":""
        }
      },
      "summary":"The mouse button identifier.",
      "name":"button",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "integer":[]
        },
        "field":{
          "1":[],
          "integer":[]
        }
      },
      "description":"\n\n ![Mouse buttons](../images/mouse.svg)\n",
      "type":"property",
      "section":"property",
      "kind":"object properties",
      "args":"(integer)",
      "tags":[],
      "lineno":81
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"string",
        "map":{
          "string":""
        }
      },
      "summary":"The button description.",
      "name":"description",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "string":[]
        },
        "field":{
          "1":[],
          "string":[]
        }
      },
      "description":"",
      "type":"property",
      "section":"property",
      "kind":"object properties",
      "args":"(string)",
      "tags":[],
      "lineno":86
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"string",
        "map":{
          "string":""
        }
      },
      "summary":"The button name.",
      "name":"name",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "string":[]
        },
        "field":{
          "1":[],
          "string":[]
        }
      },
      "description":"",
      "type":"property",
      "section":"property",
      "kind":"object properties",
      "args":"(string)",
      "tags":[],
      "lineno":91
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"string",
        "map":{
          "string":""
        }
      },
      "summary":"The button group.",
      "name":"group",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "string":[]
        },
        "field":{
          "1":[],
          "string":[]
        }
      },
      "description":"",
      "type":"property",
      "section":"property",
      "kind":"object properties",
      "args":"(string)",
      "tags":[],
      "lineno":96
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"function",
        "map":{
          "function":""
        }
      },
      "summary":"The callback when this button is pressed.",
      "name":"on_press",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "function":[]
        },
        "field":{
          "1":[],
          "function":[]
        }
      },
      "description":"",
      "type":"property",
      "section":"property",
      "kind":"object properties",
      "args":"(function)",
      "tags":[],
      "lineno":101
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"function",
        "map":{
          "function":""
        }
      },
      "summary":"The callback when this button is released.",
      "name":"on_release",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "function":[]
        },
        "field":{
          "1":[],
          "function":[]
        }
      },
      "description":"",
      "type":"property",
      "section":"property",
      "kind":"object properties",
      "args":"(function)",
      "tags":[],
      "lineno":106
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Execute this mousebinding.",
      "name":":trigger",
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":"",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"()",
      "tags":[],
      "lineno":109
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"mod",
        "2":"button",
        "3":"press",
        "4":"release",
        "map":{
          "release":" Callback for when the button is released.",
          "mod":" A list of modifier keys.  Valid modifiers are:\n  `Any`, `Mod1`, Mod2`, `Mod3`, `Mod4`, `Mod5`, `Shift`, `Lock` and `Control`.\n  This argument is (**mandatory**).",
          "button":" The mouse button (it is recommended to use the\n  `awful.button.names` constants.",
          "press":" Callback for when the button is pressed."
        }
      },
      "summary":"Create a new button to use as binding.",
      "name":"awful.button",
      "modifiers":{
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"table"
          },
          "2":{
            "type":"number"
          },
          "3":{
            "type":"function"
          },
          "4":{
            "type":"function"
          },
          "release":{
            "type":"function"
          },
          "mod":{
            "type":"table"
          },
          "button":{
            "type":"number"
          },
          "press":{
            "type":"function"
          }
        },
        "field":{
          "1":{
            "type":"table"
          },
          "2":{
            "type":"number"
          },
          "3":{
            "type":"function"
          },
          "4":{
            "type":"function"
          },
          "release":{
            "type":"function"
          },
          "mod":{
            "type":"table"
          },
          "button":{
            "type":"number"
          },
          "press":{
            "type":"function"
          }
        }
      },
      "description":"",
      "type":"constructorfct",
      "section":"constructorfct",
      "kind":"constructors",
      "args":"(mod, button, press, release)",
      "tags":[],
      "lineno":248
    },{
      "inferred":true,
      "subparams":{
        "args":["args.modifiers","args.button","args.on_press","args.on_release"]
      },
      "parameter":"field",
      "params":{
        "1":"args",
        "map":{
          "args.on_release":" Callback for when the button is released.",
          "args.on_press":" Callback for when the button is pressed.",
          "args":"",
          "args.modifiers":" A list of modifier keys.  Valid modifiers are:\n  `Any`, `Mod1`, Mod2`, `Mod3`, `Mod4`, `Mod5`, `Shift`, `Lock` and `Control`.\n  This argument is (**mandatory**).",
          "args.button":" The mouse button (it is recommended to use the\n  `awful.button.names` constants."
        }
      },
      "summary":"Create a new button to use as binding.",
      "name":"awful.button",
      "modifiers":{
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"table"
          },
          "2":{
            "type":"table"
          },
          "3":{
            "type":"number"
          },
          "4":{
            "type":"function"
          },
          "5":{
            "type":"function"
          },
          "args.on_release":{
            "type":"function"
          },
          "args.on_press":{
            "type":"function"
          },
          "args":{
            "type":"table"
          },
          "args.modifiers":{
            "type":"table"
          },
          "args.button":{
            "type":"number"
          }
        },
        "field":{
          "1":{
            "type":"table"
          },
          "2":{
            "type":"table"
          },
          "3":{
            "type":"number"
          },
          "4":{
            "type":"function"
          },
          "5":{
            "type":"function"
          },
          "args.on_release":{
            "type":"function"
          },
          "args.on_press":{
            "type":"function"
          },
          "args":{
            "type":"table"
          },
          "args.modifiers":{
            "type":"table"
          },
          "args.button":{
            "type":"number"
          }
        }
      },
      "description":"",
      "type":"constructorfct2",
      "section":"constructorfct2",
      "kind":"ldoc_skip",
      "args":"(args)",
      "tags":[],
      "lineno":261
    }],
  "type":"inputmodule",
  "file":"/home/cji/portless/awesome/build/lib/awful/button.lua",
  "package":"",
  "tags":{
    "author":["Julien Danjou &lt;julien@danjou.info&gt;","Emmanuel Lepage Vallee &lt;elv1313@gmail.com&gt;"],
    "copyright":["2018 Emmanuel Lepage Vallee","2009 Julien Danjou"]
  },
  "lineno":11
}