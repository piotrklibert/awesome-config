{
  "inferred":true,
  "kind":"widgets",
  "mod_name":"wibox.widget.progressbar",
  "summary":"A progressbar widget.",
  "sections":{
    "by_name":[]
  },
  "name":"wibox.widget.progressbar",
  "modifiers":{
    "usage":[[]],
    "author":[[]],
    "supermodule":[[]],
    "copyright":[]
  },
  "description":"\n\n ![Components](../images/progressbar.svg)\n\n Common usage examples\n =====================\n\n To add text on top of the progressbar, a `wibox.layout.stack` can be used:\n\n\n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_text.svg)\n\n \n     wibox.widget {\n         {\n             max_value     = 1,\n             value         = 0.5,\n             forced_height = 20,\n             forced_width  = 100,\n             paddings      = 1,\n             border_width  = 1,\n             border_color  = beautiful.border_color,\n             widget        = wibox.widget.progressbar,\n         },\n         {\n             text   = &#3450%&#34,\n             valign = &#34center&#34,\n             align  = &#34center&#34,\n             widget = wibox.widget.textbox,\n         },\n         layout = wibox.layout.stack\n     }\n\n To display the progressbar vertically, use a `wibox.container.rotate` widget:\n\n\n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_vertical.svg)\n\n \n     wibox.widget {\n         {\n             max_value     = 1,\n             value         = 0.33,\n             widget        = wibox.widget.progressbar,\n         },\n         forced_height = 100,\n         forced_width  = 20,\n         direction     = &#34east&#34,\n         layout        = wibox.container.rotate,\n     }\n\n By default, this widget will take all the available size. To prevent this,\n a `wibox.container.constraint` widget or the `forced_width`/`forced_height`\n properties have to be used.\n\n To have a gradient between 2 colors when the bar reaches a threshold, use\n the `gears.color` gradients:\n\n\n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_grad1.svg)\n\n \n     wibox.widget {\n         color = {\n             type  = &#34linear&#34,\n             from  = { 0  , 0 },\n             to    = { 100, 0 },\n             stops = {\n                 { 0  , &#34#0000ff&#34 },\n                 { 0.8, &#34#0000ff&#34 },\n                 { 1  , &#34#ff0000&#34 }\n             }\n         },\n         max_value     = 1,\n         value         = 1,\n         forced_height = 20,\n         forced_width  = 100,\n         paddings      = 1,\n         border_width  = 1,\n         border_color  = beautiful.border_color,\n         widget        = wibox.widget.progressbar,\n     }\n\n The same goes for multiple solid colors:\n\n\n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_grad2.svg)\n\n \n     for _, value in ipairs { 0.3, 0.5, 0.7, 1 } do\n         wibox.widget {\n             color = {\n                 type  = &#34linear&#34,\n                 from  = { 0  , 0 },\n                 to    = { 100, 0 },\n                 stops = {\n                     { 0  , &#34#00ff00&#34 },\n                     { 0.5, &#34#00ff00&#34 },\n                     { 0.5, &#34#ffff00&#34 },\n                     { 0.7, &#34#ffff00&#34 },\n                     { 0.7, &#34#ffaa00&#34 },\n                     { 0.8, &#34#ffaa00&#34 },\n                     { 0.8, &#34#ff0000&#34 },\n                     { 1  , &#34#ff0000&#34 }\n                 }\n             },\n             max_value     = 1,\n             value         = value,\n             forced_height = 20,\n             forced_width  = 100,\n             paddings      = 1,\n             border_width  = 1,\n             border_color  = beautiful.border_color,\n             widget        = wibox.widget.progressbar,\n         }\n     end\n\n\n\n![Usage example](../images/AUTOGEN_wibox_widget_defaults_progressbar.svg)\n",
  "items":[{
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":" The border color to set."
        }
      },
      "modifiers":{
        "see":[[]],
        "param":{
          "1":{
            "type":"gears.color"
          },
          "color":{
            "type":"gears.color"
          }
        },
        "usage":[[]],
        "field":{
          "1":{
            "type":"gears.color"
          },
          "color":{
            "type":"gears.color"
          }
        },
        "return":[],
        "propemits":[[]],
        "propbeautiful":[[]]
      },
      "description":"\n\n If the value is nil, no border will be drawn.\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_border_color.svg)\n",
      "tags":{
        "propemits":["true false"],
        "see":[],
        "propbeautiful":[""]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"The progressbar border color.",
      "name":"border_color",
      "kind":"object properties",
      "usage":["for _, color in ipairs { {nil}, {&#34#ff0000&#34}, {&#34#00ff00&#34}, {&#34#0000ff44&#34} } do\n    wibox.widget {\n        value        = 0.33,\n        border_width = 2,\n        border_color = color[1],\n        widget       = wibox.widget.progressbar,\n    }\nend\n"],
      "args":"(color)",
      "type":"property",
      "lineno":181
    },{
      "parameter":"field",
      "params":{
        "1":"border_width",
        "map":{
          "border_width":""
        }
      },
      "modifiers":{
        "propbeautiful":[[]],
        "usage":[[]],
        "field":{
          "1":{
            "type":"number"
          },
          "border_width":{
            "type":"number"
          }
        },
        "return":[],
        "param":{
          "1":{
            "type":"number"
          },
          "border_width":{
            "type":"number"
          }
        },
        "propemits":[[]]
      },
      "description":"\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_border_width.svg)\n",
      "tags":{
        "propemits":["true false"],
        "propbeautiful":[""]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"The progressbar border width.",
      "name":"border_width",
      "kind":"object properties",
      "usage":["for _, width in ipairs { 0, 2, 4, 6 } do\n    wibox.widget {\n        value        = 0.33,\n        border_width = width,\n        border_color = &#34#ff0000&#34,\n        widget       = wibox.widget.progressbar,\n    }\nend\n"],
      "args":"(border_width)",
      "type":"property",
      "lineno":202
    },{
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":" The border color to set."
        }
      },
      "modifiers":{
        "see":[[]],
        "param":{
          "1":{
            "type":"gears.color"
          },
          "color":{
            "type":"gears.color"
          }
        },
        "usage":[[]],
        "field":{
          "1":{
            "type":"gears.color"
          },
          "color":{
            "type":"gears.color"
          }
        },
        "return":[],
        "propemits":[[]],
        "propbeautiful":[[]]
      },
      "description":"\n\n If the value is nil, no border will be drawn.\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_bar_border_color.svg)\n",
      "tags":{
        "propemits":["true false"],
        "see":[],
        "propbeautiful":[""]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"The progressbar inner border color.",
      "name":"bar_border_color",
      "kind":"object properties",
      "usage":["for _, color in ipairs { {nil}, {&#34#ff0000&#34}, {&#34#00ff00&#34}, {&#34#0000ff44&#34} } do\n    wibox.widget {\n        value            = 0.33,\n        bar_border_width = 2,\n        bar_border_color = color[1],\n        widget           = wibox.widget.progressbar,\n    }\nend\n"],
      "args":"(color)",
      "type":"property",
      "lineno":226
    },{
      "parameter":"field",
      "params":{
        "1":"bar_border_width",
        "map":{
          "bar_border_width":""
        }
      },
      "modifiers":{
        "propbeautiful":[[]],
        "usage":[[]],
        "field":{
          "1":{
            "type":"number"
          },
          "bar_border_width":{
            "type":"number"
          }
        },
        "return":[],
        "param":{
          "1":{
            "type":"number"
          },
          "bar_border_width":{
            "type":"number"
          }
        },
        "propemits":[[]]
      },
      "description":"\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_bar_border_width.svg)\n",
      "tags":{
        "propbeautiful":[""],
        "propemits":["true false"]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"The progressbar inner border width.",
      "name":"bar_border_width",
      "kind":"object properties",
      "usage":["for _, width in ipairs { 0, 2, 4, 6 } do\n    wibox.widget {\n        value            = 0.33,\n        bar_border_width = width,\n        bar_border_color = &#34#ff0000&#34,\n        widget           = wibox.widget.progressbar,\n    }\nend\n"],
      "args":"(bar_border_width)",
      "type":"property",
      "lineno":247
    },{
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":" The progressbar color."
        }
      },
      "modifiers":{
        "see":[[]],
        "field":{
          "1":{
            "type":"gears.color"
          },
          "color":{
            "type":"gears.color"
          }
        },
        "usage":[[]],
        "usebeautiful":[[]],
        "return":[],
        "propemits":[[]],
        "param":{
          "1":{
            "type":"gears.color"
          },
          "color":{
            "type":"gears.color"
          }
        }
      },
      "description":"\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_color.svg)\n",
      "tags":{
        "propemits":["true false"],
        "see":[],
        "usebeautiful":["beautiful.progressbar_fg"]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"The progressbar foreground color.",
      "name":"color",
      "kind":"object properties",
      "usage":["for _, color in ipairs { {nil}, {&#34#ff0000&#34}, {&#34#00ff00&#34}, {&#34#0000ff44&#34} } do\n    wibox.widget {\n        value  = 0.33,\n        color  = color[1],\n        widget = wibox.widget.progressbar,\n    }\nend\n"],
      "args":"(color)",
      "type":"property",
      "lineno":268
    },{
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":" The progressbar background color."
        }
      },
      "modifiers":{
        "see":[[]],
        "field":{
          "1":{
            "type":"gears.color"
          },
          "color":{
            "type":"gears.color"
          }
        },
        "usage":[[]],
        "usebeautiful":[[]],
        "return":[],
        "propemits":[[]],
        "param":{
          "1":{
            "type":"gears.color"
          },
          "color":{
            "type":"gears.color"
          }
        }
      },
      "description":"\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_background_color.svg)\n",
      "tags":{
        "propemits":["true false"],
        "see":[],
        "usebeautiful":["beautiful.progressbar_bg"]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"The progressbar background color.",
      "name":"background_color",
      "kind":"object properties",
      "usage":["for _, color in ipairs { {nil}, {&#34#ff0000&#34}, {&#34#00ff00&#34}, {&#34#0000ff44&#34} } do\n    wibox.widget {\n        value            = 0.33,\n        background_color = color[1],\n        widget           = wibox.widget.progressbar,\n    }\nend\n"],
      "args":"(color)",
      "type":"property",
      "lineno":289
    },{
      "parameter":"field",
      "params":{
        "1":"shape",
        "map":{
          "shape":""
        }
      },
      "modifiers":{
        "see":[[]],
        "param":{
          "1":{
            "optchain":"gears.shape.rectangle",
            "type":"gears.shape",
            "opt":"gears.shape.rectangle"
          },
          "shape":{
            "optchain":"gears.shape.rectangle",
            "type":"gears.shape",
            "opt":"gears.shape.rectangle"
          }
        },
        "usage":[[]],
        "field":{
          "1":{
            "optchain":"gears.shape.rectangle",
            "type":"gears.shape",
            "opt":"gears.shape.rectangle"
          },
          "shape":{
            "optchain":"gears.shape.rectangle",
            "type":"gears.shape",
            "opt":"gears.shape.rectangle"
          }
        },
        "return":[],
        "propemits":[[]],
        "propbeautiful":[[]]
      },
      "description":"\n\n\n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_bar_shape.svg)\n",
      "tags":{
        "propemits":["true false"],
        "see":[],
        "propbeautiful":[""]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"The progressbar inner shape.",
      "name":"bar_shape",
      "kind":"object properties",
      "usage":["for _, shape in ipairs {&#34rounded_bar&#34, &#34octogon&#34, &#34hexagon&#34, &#34powerline&#34 } do\n    l:add(wibox.widget {\n          value            = 0.33,\n          bar_shape        = gears.shape[shape],\n          bar_border_color = beautiful.border_color,\n          bar_border_width = 1,\n          border_width     = 2,\n          border_color     = beautiful.border_color,\n          paddings         = 1,\n          widget           = wibox.widget.progressbar,\n      })\nend\n"],
      "args":"([shape=gears.shape.rectangle])",
      "type":"property",
      "lineno":315
    },{
      "parameter":"field",
      "params":{
        "1":"shape",
        "map":{
          "shape":""
        }
      },
      "modifiers":{
        "see":[[]],
        "param":{
          "1":{
            "optchain":"gears.shape.rectangle",
            "type":"gears.shape",
            "opt":"gears.shape.rectangle"
          },
          "shape":{
            "optchain":"gears.shape.rectangle",
            "type":"gears.shape",
            "opt":"gears.shape.rectangle"
          }
        },
        "usage":[[]],
        "field":{
          "1":{
            "optchain":"gears.shape.rectangle",
            "type":"gears.shape",
            "opt":"gears.shape.rectangle"
          },
          "shape":{
            "optchain":"gears.shape.rectangle",
            "type":"gears.shape",
            "opt":"gears.shape.rectangle"
          }
        },
        "return":[],
        "propemits":[[]],
        "propbeautiful":[[]]
      },
      "description":"\n\n\n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_shape.svg)\n",
      "tags":{
        "propemits":["true false"],
        "see":[],
        "propbeautiful":[""]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"The progressbar shape.",
      "name":"shape",
      "kind":"object properties",
      "usage":["for _, shape in ipairs {&#34rounded_bar&#34, &#34octogon&#34, &#34hexagon&#34, &#34powerline&#34 } do\n    l:add(wibox.widget {\n          value         = 0.33,\n          shape         = gears.shape[shape],\n          border_width  = 2,\n          border_color  = beautiful.border_color,\n          widget        = wibox.widget.progressbar,\n      })\nend\n"],
      "args":"([shape=gears.shape.rectangle])",
      "type":"property",
      "lineno":338
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"vertical",
        "map":{
          "vertical":""
        }
      },
      "summary":"Set the progressbar to draw vertically.",
      "name":"set_vertical",
      "modifiers":{
        "deprecatedin":[[]],
        "return":[],
        "param":{
          "1":{
            "type":"boolean"
          },
          "vertical":{
            "type":"boolean"
          }
        },
        "field":{
          "1":{
            "type":"boolean"
          },
          "vertical":{
            "type":"boolean"
          }
        }
      },
      "description":"\n\n This doesn't do anything anymore, use a `wibox.container.rotate` widget.\n",
      "type":"deprecated",
      "section":"deprecated",
      "kind":"deprecated functions",
      "args":"(vertical)",
      "tags":{
        "deprecatedin":["4.0"]
      },
      "lineno":346
    },{
      "parameter":"field",
      "params":{
        "1":"clip",
        "map":{
          "clip":""
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "optchain":"true",
            "type":"boolean",
            "opt":"true"
          },
          "clip":{
            "optchain":"true",
            "type":"boolean",
            "opt":"true"
          }
        },
        "usage":[[]],
        "return":[],
        "param":{
          "1":{
            "optchain":"true",
            "type":"boolean",
            "opt":"true"
          },
          "clip":{
            "optchain":"true",
            "type":"boolean",
            "opt":"true"
          }
        },
        "propemits":[[]]
      },
      "description":"\n\n\n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_clip.svg)\n",
      "tags":{
        "propemits":["true false"]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"Force the inner part (the bar) to fit in the background shape.",
      "name":"clip",
      "kind":"object properties",
      "usage":["wibox.widget {\n    value            = 75,\n    max_value        = 100,\n    border_width     = 2,\n    border_color     = beautiful.border_color,\n    color            = beautiful.border_color,\n    shape            = gears.shape.rounded_bar,\n    bar_shape        = gears.shape.rounded_bar,\n    clip             = false,\n    forced_height    = 30,\n    forced_width     = 100,\n    paddings         = 5,\n    margins          = {\n        top    = 12,\n        bottom = 12,\n    },\n    widget = wibox.widget.progressbar,\n}\n"],
      "args":"([clip=true])",
      "type":"property",
      "lineno":376
    },{
      "parameter":"field",
      "params":{
        "1":"ticks",
        "map":{
          "ticks":""
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "ticks":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          }
        },
        "usage":[[]],
        "return":[],
        "param":{
          "1":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          },
          "ticks":{
            "optchain":"false",
            "type":"boolean",
            "opt":"false"
          }
        },
        "propemits":[[]]
      },
      "description":"\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_ticks.svg)\n",
      "tags":{
        "propemits":["true false"]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"The progressbar to draw ticks.",
      "name":"ticks",
      "kind":"object properties",
      "usage":["for _, has_ticks in ipairs { true, false } do\n    wibox.widget {\n        value        = 0.33,\n        border_width = 2,\n        ticks        = has_ticks,\n        widget       = wibox.widget.progressbar,\n    }\nend\n"],
      "args":"([ticks=false])",
      "type":"property",
      "lineno":396
    },{
      "parameter":"field",
      "params":{
        "1":"ticks_gap",
        "map":{
          "ticks_gap":""
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "optchain":"1",
            "type":"number",
            "opt":"1"
          },
          "ticks_gap":{
            "optchain":"1",
            "type":"number",
            "opt":"1"
          }
        },
        "usage":[[]],
        "return":[],
        "param":{
          "1":{
            "optchain":"1",
            "type":"number",
            "opt":"1"
          },
          "ticks_gap":{
            "optchain":"1",
            "type":"number",
            "opt":"1"
          }
        },
        "propemits":[[]]
      },
      "description":"\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_ticks_gap.svg)\n",
      "tags":{
        "propemits":["true false"]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"The progressbar ticks gap.",
      "name":"ticks_gap",
      "kind":"object properties",
      "usage":["for _, gap in ipairs { 0, 2, 4, 6 } do\n    wibox.widget {\n        value        = 0.33,\n        border_width = 2,\n        ticks        = true,\n        ticks_gap    = gap,\n        widget       = wibox.widget.progressbar,\n    }\nend\n"],
      "args":"([ticks_gap=1])",
      "type":"property",
      "lineno":417
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"ticks_size",
        "map":{
          "ticks_size":""
        }
      },
      "summary":"The progressbar ticks size.",
      "name":"ticks_size",
      "modifiers":{
        "param":{
          "1":{
            "optchain":"4",
            "type":"number",
            "opt":"4"
          },
          "ticks_size":{
            "optchain":"4",
            "type":"number",
            "opt":"4"
          }
        },
        "return":[],
        "propemits":[[]],
        "field":{
          "1":{
            "optchain":"4",
            "type":"number",
            "opt":"4"
          },
          "ticks_size":{
            "optchain":"4",
            "type":"number",
            "opt":"4"
          }
        }
      },
      "description":"\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_ticks_size.svg)\n\n \n    for _, size in ipairs { 0, 2, 4, 6 } do\n        wibox.widget {\n            value        = 0.33,\n            border_width = 2,\n            ticks        = true,\n            ticks_size   = size,\n            widget       = wibox.widget.progressbar,\n        }\n    end\n\n It is also possible to mix this feature with the `bar_shape` property:\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_ticks_size2.svg)\n\n \n    for _, size in ipairs { 0, 2, 4, 6 } do\n        -- Plane shapes.\n        wibox.widget {\n            value        = 1,\n            border_width = 2,\n            ticks        = true,\n            ticks_size   = size,\n            ticks_gap    = 3,\n            paddings     = 2,\n            bar_shape    = gears.shape.rounded_bar,\n            widget       = wibox.widget.progressbar,\n        }\n         \n        -- With a border for each shape.\n        wibox.widget {\n            value            = 1,\n            border_width     = 2,\n            ticks            = true,\n            ticks_size       = size,\n            ticks_gap        = 3,\n            paddings         = 2,\n            bar_shape        = gears.shape.rounded_bar,\n            bor_border_width = 2,\n            bar_border_color = beautiful.border_color,\n            widget           = wibox.widget.progressbar,\n        }\n         \n        -- With a gradient.\n        wibox.widget {\n            color = {\n                type  = &#34linear&#34,\n                from  = { 0 , 0 },\n                to    = { 65, 0 },\n                stops = {\n                    { 0   , &#34#0000ff&#34 },\n                    { 0.75, &#34#0000ff&#34 },\n                    { 1   , &#34#ff0000&#34 }\n                }\n            },\n            paddings     = 2,\n            value        = 1,\n            border_width = 2,\n            ticks        = true,\n            ticks_size   = size,\n            ticks_gap    = 3,\n            bar_shape    = gears.shape.rounded_bar,\n            widget       = wibox.widget.progressbar,\n        }\n    end\n",
      "type":"property",
      "section":"property",
      "kind":"object properties",
      "args":"([ticks_size=4])",
      "tags":{
        "propemits":["true false"]
      },
      "lineno":495
    },{
      "parameter":"field",
      "params":{
        "1":"max_value",
        "map":{
          "max_value":""
        }
      },
      "modifiers":{
        "see":[[]],
        "usage":[[]],
        "field":{
          "1":{
            "optchain":"1",
            "type":"number",
            "opt":"1"
          },
          "max_value":{
            "optchain":"1",
            "type":"number",
            "opt":"1"
          }
        },
        "return":[],
        "param":{
          "1":{
            "optchain":"1",
            "type":"number",
            "opt":"1"
          },
          "max_value":{
            "optchain":"1",
            "type":"number",
            "opt":"1"
          }
        },
        "propemits":[[]]
      },
      "description":"\n\n By default, the value is 1. So the content of `value` is\n a percentage.\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_max_value.svg)\n",
      "tags":{
        "propemits":["true false"],
        "see":[]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"The maximum value the progressbar should handle.",
      "name":"max_value",
      "kind":"object properties",
      "usage":["for _, value in ipairs { 0, 10, 42, 999 } do\n    wibox.widget {\n        value     = value,\n        max_value = 42,\n        widget    = wibox.widget.progressbar,\n    }\nend\n"],
      "args":"([max_value=1])",
      "type":"property",
      "lineno":518
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "summary":"The progressbar background color.",
      "name":"beautiful.progressbar_bg",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(color)",
      "tags":[],
      "lineno":523
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "summary":"The progressbar foreground color.",
      "name":"beautiful.progressbar_fg",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(color)",
      "tags":[],
      "lineno":528
    },{
      "parameter":"field",
      "params":{
        "1":"shape",
        "map":{
          "shape":""
        }
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "param":{
          "1":{
            "type":"gears.shape"
          },
          "shape":{
            "type":"gears.shape"
          }
        },
        "field":{
          "1":{
            "type":"gears.shape"
          },
          "shape":{
            "type":"gears.shape"
          }
        }
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"beautiful",
      "inferred":true,
      "subparams":[],
      "summary":"The progressbar shape.",
      "name":"beautiful.progressbar_shape",
      "type":"beautiful",
      "args":"(shape)",
      "kind":"theme variables",
      "lineno":534
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "summary":"The progressbar border color.",
      "name":"beautiful.progressbar_border_color",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(color)",
      "tags":[],
      "lineno":539
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"number",
        "map":{
          "number":""
        }
      },
      "summary":"The progressbar outer border width.",
      "name":"beautiful.progressbar_border_width",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "number":[]
        },
        "field":{
          "1":[],
          "number":[]
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(number)",
      "tags":[],
      "lineno":544
    },{
      "parameter":"field",
      "params":{
        "1":"shape",
        "map":{
          "shape":""
        }
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "param":{
          "1":{
            "type":"gears.shape"
          },
          "shape":{
            "type":"gears.shape"
          }
        },
        "field":{
          "1":{
            "type":"gears.shape"
          },
          "shape":{
            "type":"gears.shape"
          }
        }
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"beautiful",
      "inferred":true,
      "subparams":[],
      "summary":"The progressbar inner shape.",
      "name":"beautiful.progressbar_bar_shape",
      "type":"beautiful",
      "args":"(shape)",
      "kind":"theme variables",
      "lineno":550
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"number",
        "map":{
          "number":""
        }
      },
      "summary":"The progressbar bar border width.",
      "name":"beautiful.progressbar_bar_border_width",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "number":[]
        },
        "field":{
          "1":[],
          "number":[]
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(number)",
      "tags":[],
      "lineno":555
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "summary":"The progressbar bar border color.",
      "name":"beautiful.progressbar_bar_border_color",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(color)",
      "tags":[],
      "lineno":560
    },{
      "parameter":"field",
      "params":{
        "1":"margins",
        "map":{
          "margins.left":"",
          "margins.top":"",
          "margins.right":"",
          "margins":" A table for each side or a number",
          "margins.bottom":""
        }
      },
      "modifiers":{
        "see":[[],[],[]],
        "param":{
          "1":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          },
          "2":{
            "type":"number",
            "opt":"0"
          },
          "3":{
            "type":"number",
            "opt":"0"
          },
          "4":{
            "type":"number",
            "opt":"0"
          },
          "5":{
            "type":"number",
            "opt":"0"
          },
          "margins.left":{
            "type":"number",
            "opt":"0"
          },
          "margins.top":{
            "type":"number",
            "opt":"0"
          },
          "margins.right":{
            "type":"number",
            "opt":"0"
          },
          "margins":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          },
          "margins.bottom":{
            "type":"number",
            "opt":"0"
          }
        },
        "usage":[[]],
        "field":{
          "1":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          },
          "2":{
            "type":"number",
            "opt":"0"
          },
          "3":{
            "type":"number",
            "opt":"0"
          },
          "4":{
            "type":"number",
            "opt":"0"
          },
          "5":{
            "type":"number",
            "opt":"0"
          },
          "margins.left":{
            "type":"number",
            "opt":"0"
          },
          "margins.top":{
            "type":"number",
            "opt":"0"
          },
          "margins.right":{
            "type":"number",
            "opt":"0"
          },
          "margins":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          },
          "margins.bottom":{
            "type":"number",
            "opt":"0"
          }
        },
        "return":[],
        "propemits":[[]],
        "propbeautiful":[[]]
      },
      "description":"\n\n The margins are around the progressbar. If you want to add space between the\n bar and the border, use `paddings`.\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_margins2.svg)\n\n \n    wibox.widget {\n        {\n            margins = {\n                top    = 4,\n                bottom = 2,\n                right  = 10,\n                left   = 5\n            },\n            value        = 0.33,\n            border_width = 2,\n            border_color = &#34#00ff00&#34,\n            background   = &#34#0000ff&#34,\n            widget       = wibox.widget.progressbar,\n        },\n        forced_width = 75, --DOC_hIDE\n        bg     = &#34#ff0000&#34,\n        widget = wibox.container.background\n    }\n\n Note that if the `clip` is disabled, this allows the background to be smaller\n than the bar.\n\n It is also possible to specify a single number instead of a border for each\n direction;\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_margins1.svg)\n",
      "tags":{
        "propemits":["false false"],
        "see":[],
        "propbeautiful":[""]
      },
      "section":"property",
      "inferred":true,
      "subparams":{
        "margins":["margins.top","margins.bottom","margins.left","margins.right"]
      },
      "summary":"The progressbar margins.",
      "name":"margins",
      "kind":"object properties",
      "usage":["for _, margin in ipairs { 0, 2, 4, 6 } do\n    wibox.widget {\n        value   = 0.33,\n        margins = margin,\n        widget  = wibox.widget.progressbar,\n    }\nend\n"],
      "args":"([margins=0])",
      "type":"property",
      "lineno":620
    },{
      "parameter":"field",
      "params":{
        "1":"padding",
        "map":{
          "paddings.right":"",
          "paddings.bottom":"",
          "paddings.top":"",
          "paddings.left":"",
          "padding":" A table for each side or a number"
        }
      },
      "modifiers":{
        "see":[[],[]],
        "param":{
          "1":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          },
          "2":{
            "type":"number",
            "opt":"0"
          },
          "3":{
            "type":"number",
            "opt":"0"
          },
          "4":{
            "type":"number",
            "opt":"0"
          },
          "5":{
            "type":"number",
            "opt":"0"
          },
          "paddings.right":{
            "type":"number",
            "opt":"0"
          },
          "paddings.bottom":{
            "type":"number",
            "opt":"0"
          },
          "paddings.top":{
            "type":"number",
            "opt":"0"
          },
          "paddings.left":{
            "type":"number",
            "opt":"0"
          },
          "padding":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          }
        },
        "usage":[[]],
        "field":{
          "1":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          },
          "2":{
            "type":"number",
            "opt":"0"
          },
          "3":{
            "type":"number",
            "opt":"0"
          },
          "4":{
            "type":"number",
            "opt":"0"
          },
          "5":{
            "type":"number",
            "opt":"0"
          },
          "paddings.right":{
            "type":"number",
            "opt":"0"
          },
          "paddings.bottom":{
            "type":"number",
            "opt":"0"
          },
          "paddings.top":{
            "type":"number",
            "opt":"0"
          },
          "paddings.left":{
            "type":"number",
            "opt":"0"
          },
          "padding":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          }
        },
        "return":[],
        "propemits":[[]],
        "propbeautiful":[[]]
      },
      "description":"\n\n This is the space between the inner bar and the progressbar outer border.\n\n Note that if the `clip` is disabled, this allows the bar to be taller\n than the background.\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_paddings2.svg)\n\n \n    wibox.widget {\n        paddings = {\n            top    = 4,\n            bottom = 2,\n            right  = 10,\n            left   = 5\n        },\n        value            = 1,\n        border_width     = 2,\n        border_color     = &#34#00ff00&#34,\n        bar_border_wisth = 2,\n        bar_border_color = &#34#ffff00&#34,\n        bor_color        = &#34#ff00ff&#34,\n        background       = &#34#0000ff&#34,\n        widget           = wibox.widget.progressbar,\n    }\n\n The paddings can also be a single numeric value:\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_paddings1.svg)\n",
      "tags":{
        "propemits":["false false"],
        "see":[],
        "propbeautiful":[""]
      },
      "section":"property",
      "inferred":true,
      "subparams":{
        "paddings":["paddings.top","paddings.bottom","paddings.left","paddings.right"]
      },
      "summary":"The progressbar padding.",
      "name":"paddings",
      "kind":"object properties",
      "usage":["for _, padding in ipairs { 0, 2, 4, 6 } do\n    wibox.widget {\n        value   = 0.33,\n        paddings = padding,\n        widget  = wibox.widget.progressbar,\n    }\nend\n"],
      "args":"([padding=0])",
      "type":"property",
      "lineno":675
    },{
      "parameter":"field",
      "params":{
        "1":"margins",
        "map":{
          "margins.left":"",
          "margins.top":"",
          "margins.right":"",
          "margins":" A table for each side or a number",
          "margins.bottom":""
        }
      },
      "modifiers":{
        "see":[[],[],[]],
        "return":[],
        "param":{
          "1":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          },
          "2":{
            "type":"number",
            "opt":"0"
          },
          "3":{
            "type":"number",
            "opt":"0"
          },
          "4":{
            "type":"number",
            "opt":"0"
          },
          "5":{
            "type":"number",
            "opt":"0"
          },
          "margins.left":{
            "type":"number",
            "opt":"0"
          },
          "margins.top":{
            "type":"number",
            "opt":"0"
          },
          "margins.right":{
            "type":"number",
            "opt":"0"
          },
          "margins":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          },
          "margins.bottom":{
            "type":"number",
            "opt":"0"
          }
        },
        "field":{
          "1":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          },
          "2":{
            "type":"number",
            "opt":"0"
          },
          "3":{
            "type":"number",
            "opt":"0"
          },
          "4":{
            "type":"number",
            "opt":"0"
          },
          "5":{
            "type":"number",
            "opt":"0"
          },
          "margins.left":{
            "type":"number",
            "opt":"0"
          },
          "margins.top":{
            "type":"number",
            "opt":"0"
          },
          "margins.right":{
            "type":"number",
            "opt":"0"
          },
          "margins":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          },
          "margins.bottom":{
            "type":"number",
            "opt":"0"
          }
        }
      },
      "description":"\n\n Note that if the `clip` is disabled, this allows the background to be smaller\n than the bar.",
      "tags":{
        "see":[]
      },
      "section":"beautiful",
      "inferred":true,
      "subparams":{
        "margins":["margins.top","margins.bottom","margins.left","margins.right"]
      },
      "summary":"The progressbar margins.",
      "name":"beautiful.progressbar_margins",
      "type":"beautiful",
      "args":"([margins=0])",
      "kind":"theme variables",
      "lineno":689
    },{
      "parameter":"field",
      "params":{
        "1":"padding",
        "map":{
          "paddings.right":"",
          "paddings.bottom":"",
          "paddings.top":"",
          "paddings.left":"",
          "padding":" A table for each side or a number"
        }
      },
      "modifiers":{
        "see":[[],[]],
        "return":[],
        "param":{
          "1":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          },
          "2":{
            "type":"number",
            "opt":"0"
          },
          "3":{
            "type":"number",
            "opt":"0"
          },
          "4":{
            "type":"number",
            "opt":"0"
          },
          "5":{
            "type":"number",
            "opt":"0"
          },
          "paddings.right":{
            "type":"number",
            "opt":"0"
          },
          "paddings.bottom":{
            "type":"number",
            "opt":"0"
          },
          "paddings.top":{
            "type":"number",
            "opt":"0"
          },
          "paddings.left":{
            "type":"number",
            "opt":"0"
          },
          "padding":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          }
        },
        "field":{
          "1":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          },
          "2":{
            "type":"number",
            "opt":"0"
          },
          "3":{
            "type":"number",
            "opt":"0"
          },
          "4":{
            "type":"number",
            "opt":"0"
          },
          "5":{
            "type":"number",
            "opt":"0"
          },
          "paddings.right":{
            "type":"number",
            "opt":"0"
          },
          "paddings.bottom":{
            "type":"number",
            "opt":"0"
          },
          "paddings.top":{
            "type":"number",
            "opt":"0"
          },
          "paddings.left":{
            "type":"number",
            "opt":"0"
          },
          "padding":{
            "optchain":"0",
            "type":"(table|number|nil)",
            "opt":"0"
          }
        }
      },
      "description":"\n\n Note that if the `clip` is disabled, this allows the bar to be taller\n than the background.",
      "tags":{
        "see":[]
      },
      "section":"beautiful",
      "inferred":true,
      "subparams":{
        "paddings":["paddings.top","paddings.bottom","paddings.left","paddings.right"]
      },
      "summary":"The progressbar padding.",
      "name":"beautiful.progressbar_paddings",
      "type":"beautiful",
      "args":"([padding=0])",
      "kind":"theme variables",
      "lineno":703
    },{
      "parameter":"field",
      "params":{
        "1":"value",
        "map":{
          "value":" The progress bar value."
        }
      },
      "modifiers":{
        "see":[[]],
        "usage":[[]],
        "field":{
          "1":{
            "type":"number"
          },
          "value":{
            "type":"number"
          }
        },
        "return":[],
        "param":{
          "1":{
            "type":"number"
          },
          "value":{
            "type":"number"
          }
        },
        "propemits":[[]]
      },
      "description":"\n\n By default, unless `max_value` is set, it is number between\n zero and one.\n\n \n\n![Usage example](../images/AUTOGEN_wibox_widget_progressbar_value.svg)\n",
      "tags":{
        "propemits":["true false"],
        "see":[]
      },
      "section":"property",
      "inferred":true,
      "subparams":[],
      "summary":"Set the progressbar value.",
      "name":"value",
      "kind":"object properties",
      "usage":["for _, value in ipairs { 0, 0.2, 0.5, 1 } do\n    wibox.widget {\n        value  = value,\n        widget = wibox.widget.progressbar,\n    }\nend\n"],
      "args":"(value)",
      "type":"property",
      "lineno":930
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"height",
        "map":{
          "height":" The height to set."
        }
      },
      "summary":"Set the progressbar height.",
      "name":"set_height",
      "modifiers":{
        "param":{
          "1":{
            "type":"number"
          },
          "height":{
            "type":"number"
          }
        },
        "return":[],
        "renamedin":[[]],
        "field":{
          "1":{
            "type":"number"
          },
          "height":{
            "type":"number"
          }
        }
      },
      "description":"\n\n This method is deprecated.  Use a `wibox.container.constraint` widget or\n `forced_height`.\n",
      "type":"deprecated",
      "section":"deprecated",
      "kind":"deprecated functions",
      "args":"(height)",
      "tags":{
        "renamedin":["4.0"]
      },
      "lineno":954
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"width",
        "map":{
          "width":" The width to set."
        }
      },
      "summary":"Set the progressbar width.",
      "name":"set_width",
      "modifiers":{
        "param":{
          "1":{
            "type":"number"
          },
          "width":{
            "type":"number"
          }
        },
        "return":[],
        "renamedin":[[]],
        "field":{
          "1":{
            "type":"number"
          },
          "width":{
            "type":"number"
          }
        }
      },
      "description":"\n\n This method is deprecated.  Use a `wibox.container.constraint` widget or\n `forced_width`.\n",
      "type":"deprecated",
      "section":"deprecated",
      "kind":"deprecated functions",
      "args":"(width)",
      "tags":{
        "renamedin":["4.0"]
      },
      "lineno":967
    },{
      "inferred":true,
      "subparams":{
        "args":["args.width","args.height"]
      },
      "parameter":"field",
      "params":{
        "1":"args",
        "map":{
          "args.height":" The height.",
          "args":" Standard widget() arguments. You should add width and\n  height constructor parameters to set progressbar geometry.",
          "args.width":" The width."
        }
      },
      "summary":"Create a progressbar widget.",
      "name":"wibox.widget.progressbar",
      "modifiers":{
        "return":[{
            "type":"wibox.widget.progressbar"
          }],
        "param":{
          "1":{
            "type":"table"
          },
          "2":{
            "type":"number"
          },
          "3":{
            "type":"number"
          },
          "args.height":{
            "type":"number"
          },
          "args":{
            "type":"table"
          },
          "args.width":{
            "type":"number"
          }
        },
        "field":{
          "1":{
            "type":"table"
          },
          "2":{
            "type":"number"
          },
          "3":{
            "type":"number"
          },
          "args.height":{
            "type":"number"
          },
          "args":{
            "type":"table"
          },
          "args.width":{
            "type":"number"
          }
        }
      },
      "description":"",
      "type":"constructorfct",
      "section":"constructorfct",
      "kind":"constructors",
      "args":"(args)",
      "tags":[],
      "lineno":1002
    }],
  "type":"widgetmod",
  "usage":["wibox.widget {\n    max_value     = 1,\n    value         = 0.33,\n    forced_height = 20,\n    forced_width  = 100,\n    shape         = gears.shape.rounded_bar,\n    border_width  = 2,\n    border_color  = beautiful.border_color,\n    widget        = wibox.widget.progressbar,\n}\n"],
  "file":"/home/cji/portless/awesome/build/lib/wibox/widget/progressbar.lua",
  "package":"",
  "tags":{
    "author":["Julien Danjou &lt;julien@danjou.info&gt;"],
    "copyright":"2009 Julien Danjou",
    "supermodule":["wibox.widget.base"]
  },
  "lineno":145
}