{
  "inferred":true,
  "kind":"libraries",
  "mod_name":"placement",
  "summary":"Algorithms used to place various drawables.",
  "sections":{
    "by_name":[]
  },
  "name":"awful.placement",
  "modifiers":{
    "copyright":[],
    "author":[[],[]]
  },
  "description":"\n\n The functions provided by this module all follow the same arguments\n conventions. This allow:\n\n * To use them in various other module as\n   [visitor objects](https://en.wikipedia.org/wiki/Visitor_pattern)\n * Turn each function into an API with various common customization parameters.\n * Re-use the same functions for the `mouse`, `client`s, `screen`s and `wibox`es\n\n\n <h3>Compositing</h3>\n\n It is possible to compose placement function using the `+` or `*` operator:\n\n\n\n![Usage example](../images/AUTOGEN_awful_placement_compose.svg)\n\n \n     -- &#34right&#34 will be replaced by &#34left&#34\n     local f = (awful.placement.right + awful.placement.left)\n     f(client.focus)\n\n\n\n![Usage example](../images/AUTOGEN_awful_placement_compose2.svg)\n\n \n     -- Simulate Windows 7 &#34edge snap&#34 (also called aero snap) feature\n     local axis = &#34vertically&#34\n     local f = awful.placement.scale\n         + awful.placement.left\n         + (axis and awful.placement[&#34maximize_&#34..axis] or nil)\n     local geo = f(client.focus, {honor_workarea=true, to_percent = 0.5})\n\n <h3>Common arguments</h3>\n\n **pretend** (*boolean*):\n\n Do not apply the new geometry. This is useful if only the return values is\n necessary.\n\n **honor_workarea** (*boolean*):\n\n  Take workarea into account when placing the drawable (default: false)\n\n **honor_padding** (*boolean*):\n\n  Take the screen padding into account (see `screen.padding`)\n\n **tag** (*tag*):\n\n  Use a tag geometry\n\n **margins** (*number* or *table*):\n\n  A table with left, right, top, bottom keys or a number\n\n **parent** (client, wibox, mouse or screen):\n\n  A parent drawable to use a base geometry\n\n **bounding_rect** (table):\n\n A bounding rectangle\n\n **attach** (*boolean*):\n\n When the parent geometry (like the screen) changes, re-apply the placement\n function. This will add a `detach_callback` function to the drawable. Call\n this to detach the function. This will be called automatically when a new\n attached function is set.\n\n **offset** (*table or number*):\n\n The offset(s) to apply to the new geometry.\n\n **store_geometry** (*boolean*):\n\n Keep a single history of each type of placement. It can be restored using\n `awful.placement.restore` by setting the right `context` argument.\n\n When either the parent or the screen geometry change, call the placement\n function again.\n\n **update_workarea** (*boolean*):\n\n If *attach* is true, also update the screen workarea.\n",
  "items":[{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" The arguments",
          "d":" A drawable (like `client`, `mouse`\n   or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          }
        },
        "return":[{
            "type":"table"
          },{
            "type":"string"
          }],
        "param":{
          "1":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n Valid arguments include the common ones and:\n\n * **include_sides**: Also include the left, right, top and bottom positions\n\n\n\n![Usage example](../images/AUTOGEN_awful_placement_closest_mouse.svg)\n\n**Usage example output**:\n\n\n",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Move a drawable to the closest corner of the parent geometry (such as the\n screen).",
      "name":"awful.placement.closest_corner",
      "kind":"static module functions",
      "usage":["-- Move the mouse to the closest corner of the focused client\nawful.placement.closest_corner(mouse, {include_sides=true, parent=c})\n-- It is possible to emulate the mouse API to get the closest corner of\n-- random area\nlocal _, corner = awful.placement.closest_corner(\n    {coords=function() return {x = 100, y=100} end},\n    {include_sides = true, bounding_rect = {x=0, y=0, width=200, height=200}}\n)\nprint(&#34Closest corner:&#34, corner)\n"],
      "args":"([d=client.focus[, args={}]])",
      "type":"staticfct",
      "lineno":883
    },{
      "parameter":"field",
      "params":{
        "1":"c",
        "2":"args",
        "map":{
          "args":" The arguments",
          "c":" The client.",
          "args.screen":" The screen."
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"client"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "3":{
            "type":"integer",
            "opt":"client's screen"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "c":{
            "type":"client"
          },
          "args.screen":{
            "type":"integer",
            "opt":"client's screen"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"client"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "3":{
            "type":"integer",
            "opt":"client's screen"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "c":{
            "type":"client"
          },
          "args.screen":{
            "type":"integer",
            "opt":"client's screen"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n\n![Usage example](../images/AUTOGEN_awful_placement_no_offscreen.svg)\n\n**Usage example output**:\n\n\n",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":{
        "args":["args.screen"]
      },
      "summary":"Place the client so no part of it will be outside the screen (workarea).",
      "name":"awful.placement.no_offscreen",
      "kind":"static module functions",
      "usage":["awful.placement.no_offscreen(c, {honor_workarea=true, margins=40})\n"],
      "args":"(c[, args={}])",
      "type":"staticfct",
      "lineno":936
    },{
      "parameter":"field",
      "params":{
        "1":"c",
        "2":"args",
        "map":{
          "c":" The client.",
          "args":" Other arguments"
        }
      },
      "modifiers":{
        "field":{
          "1":[],
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "c":[],
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":[],
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "c":[],
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n\n![Usage example](../images/AUTOGEN_awful_placement_no_overlap.svg)\n",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Place the client where there's place available with minimum overlap.",
      "name":"awful.placement.no_overlap",
      "kind":"static module functions",
      "usage":["awful.placement.no_overlap(client.focus)\nlocal x,y = screen[4].geometry.x, screen[4].geometry.y\n"],
      "args":"(c[, args={}])",
      "type":"staticfct",
      "lineno":1018
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n\n![Usage example](../images/AUTOGEN_awful_placement_under_mouse.svg)\n",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Place the client under the mouse.",
      "name":"awful.placement.under_mouse",
      "kind":"static module functions",
      "usage":["awful.placement.under_mouse(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1111
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n It will place `c` next to the mouse pointer, trying the following positions\n in this order: right, left, above and below.\n\n\n![Usage example](../images/AUTOGEN_awful_placement_next_to_mouse.svg)\n",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Place the client next to the mouse.",
      "name":"awful.placement.next_to_mouse",
      "kind":"static module functions",
      "usage":["awful.placement.next_to_mouse(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1141
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "summary":"Resize the drawable to the cursor.",
      "name":"awful.placement.resize_to_mouse",
      "modifiers":{
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        }
      },
      "description":"\n\n Valid args:\n\n * *axis*: The axis (vertical or horizontal). If none is\n    specified, then the drawable will be resized on both axis.\n\n\n\n![Usage example](../images/AUTOGEN_awful_placement_resize_to_mouse.svg)\n",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(d[, args={}])",
      "tags":[],
      "lineno":1194
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "summary":"Move the drawable (client or wibox) `d` to a screen position or side.",
      "name":"awful.placement.align",
      "modifiers":{
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        }
      },
      "description":"\n\n Supported args.positions are:\n\n * top_left\n * top_right\n * bottom_left\n * bottom_right\n * left\n * right\n * top\n * bottom\n * centered\n * center_vertical\n * center_horizontal\n\n\n\n![Usage example](../images/AUTOGEN_awful_placement_align.svg)\n",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(d[, args={}])",
      "tags":[],
      "lineno":1275
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_top_left.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Align a client to the top left of the parent area.",
      "name":"awful.placement.top_left",
      "kind":"static module functions",
      "usage":["awful.placement.top_left(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1329
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_top_right.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Align a client to the top right of the parent area.",
      "name":"awful.placement.top_right",
      "kind":"static module functions",
      "usage":["awful.placement.top_right(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1341
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_bottom_left.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Align a client to the bottom left of the parent area.",
      "name":"awful.placement.bottom_left",
      "kind":"static module functions",
      "usage":["awful.placement.bottom_left(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1353
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_bottom_right.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Align a client to the bottom right of the parent area.",
      "name":"awful.placement.bottom_right",
      "kind":"static module functions",
      "usage":["awful.placement.bottom_right(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1365
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_left.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Align a client to the left of the parent area.",
      "name":"awful.placement.left",
      "kind":"static module functions",
      "usage":["awful.placement.left(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1377
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_right.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Align a client to the right of the parent area.",
      "name":"awful.placement.right",
      "kind":"static module functions",
      "usage":["awful.placement.right(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1389
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_top.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Align a client to the top of the parent area.",
      "name":"awful.placement.top",
      "kind":"static module functions",
      "usage":["awful.placement.top(client.focus)\nassert(c.x == screen[1].geometry.width/2-40/2-c.border_width)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1402
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_bottom.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Align a client to the bottom of the parent area.",
      "name":"awful.placement.bottom",
      "kind":"static module functions",
      "usage":["awful.placement.bottom(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1414
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_centered.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Align a client to the center of the parent area.",
      "name":"awful.placement.centered",
      "kind":"static module functions",
      "usage":["awful.placement.centered(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1426
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_center_vertical.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Align a client to the vertical center of the parent area.",
      "name":"awful.placement.center_vertical",
      "kind":"static module functions",
      "usage":["awful.placement.center_vertical(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1437
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_center_horizontal.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Align a client to the horizontal center left of the parent area.",
      "name":"awful.placement.center_horizontal",
      "kind":"static module functions",
      "usage":["awful.placement.center_horizontal(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1449
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" The arguments",
          "d":" A drawable (like `client` or `wibox`)"
        }
      },
      "summary":"Stretch a drawable in a specific direction.",
      "name":"awful.placement.stretch",
      "modifiers":{
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          }
        },
        "field":{
          "1":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          }
        }
      },
      "description":"\n Valid args:\n\n * **direction**: The stretch direction (*left*, *right*, *up*, *down*) or\n  a table with multiple directions.\n\n\n\n![Usage example](../images/AUTOGEN_awful_placement_stretch.svg)\n",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"([d=client.focus[, args={}]])",
      "tags":[],
      "lineno":1463
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments",
          "d":" A drawable (like `client` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_stretch_left.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Stretch the drawable to the left of the parent area.",
      "name":"awful.placement.stretch_left",
      "kind":"static module functions",
      "usage":["placement.stretch_left(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1529
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments",
          "d":" A drawable (like `client` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_stretch_right.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Stretch the drawable to the right of the parent area.",
      "name":"awful.placement.stretch_right",
      "kind":"static module functions",
      "usage":["placement.stretch_right(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1541
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments",
          "d":" A drawable (like `client` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_stretch_up.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Stretch the drawable to the top of the parent area.",
      "name":"awful.placement.stretch_up",
      "kind":"static module functions",
      "usage":["placement.stretch_up(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1553
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments",
          "d":" A drawable (like `client` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_stretch_down.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Stretch the drawable to the bottom of the parent area.",
      "name":"awful.placement.stretch_down",
      "kind":"static module functions",
      "usage":["placement.stretch_down(client.focus)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1565
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" The arguments",
          "d":" A drawable (like `client` or `wibox`)"
        }
      },
      "summary":"Maximize a drawable horizontally, vertically or both.",
      "name":"awful.placement.maximize",
      "modifiers":{
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          }
        },
        "field":{
          "1":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          }
        }
      },
      "description":"\n Valid args:\n\n * *axis*:The axis (vertical or horizontal). If none is\n    specified, then the drawable will be maximized on both axis.\n\n\n\n![Usage example](../images/AUTOGEN_awful_placement_maximize.svg)\n",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"([d=client.focus[, args={}]])",
      "tags":[],
      "lineno":1579
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_maximize_vertically.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Vetically maximize the drawable in the parent area.",
      "name":"awful.placement.maximize_vertically",
      "kind":"static module functions",
      "usage":["placement.maximize_vertically(c)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1626
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments&#34)",
          "d":" A drawable (like `client` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n![Usage example](../images/AUTOGEN_awful_placement_maximize_horizontally.svg)",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Horizontally maximize the drawable in the parent area.",
      "name":"awful.placement.maximize_horizontally",
      "kind":"static module functions",
      "usage":["placement.maximize_horizontally(c)\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1637
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" The arguments",
          "d":" A drawable (like `client` or `wibox`)"
        }
      },
      "summary":"Scale the drawable by either a relative or absolute percent.",
      "name":"awful.placement.scale",
      "modifiers":{
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          }
        },
        "field":{
          "1":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          }
        }
      },
      "description":"\n\n Valid args:\n\n **to_percent** : A number between 0 and 1. It represent a percent related to\n  the parent geometry.\n **by_percent** : A number between 0 and 1. It represent a percent related to\n  the current size.\n **direction**: Nothing or \"left\", \"right\", \"up\", \"down\".\n",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"([d=client.focus[, args={}]])",
      "tags":[],
      "lineno":1651
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "d":" A wibox or client",
          "args.mode":" The mode",
          "args.preferred_anchors":" The preferred anchor(s) (in order)",
          "args":"",
          "args.geometry":" A geometry inside the other drawable",
          "args.preferred_positions":" The preferred positions (in order)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "type":"table"
          },
          "3":{
            "type":"string"
          },
          "4":{
            "type":"string|table"
          },
          "5":{
            "type":"string|table"
          },
          "6":{
            "type":"string"
          },
          "d":{
            "type":"drawable"
          },
          "args.mode":{
            "type":"string"
          },
          "args.preferred_anchors":{
            "type":"string|table"
          },
          "args":{
            "type":"table"
          },
          "args.geometry":{
            "type":"string"
          },
          "args.preferred_positions":{
            "type":"string|table"
          }
        },
        "return":[{
            "type":"table"
          },{
            "type":"string"
          },{
            "type":"string"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "type":"table"
          },
          "3":{
            "type":"string"
          },
          "4":{
            "type":"string|table"
          },
          "5":{
            "type":"string|table"
          },
          "6":{
            "type":"string"
          },
          "d":{
            "type":"drawable"
          },
          "args.mode":{
            "type":"string"
          },
          "args.preferred_anchors":{
            "type":"string|table"
          },
          "args":{
            "type":"table"
          },
          "args.geometry":{
            "type":"string"
          },
          "args.preferred_positions":{
            "type":"string|table"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n This placement function offers two additional settings to align the drawable\n alongside the parent geometry. The first one, the position, sets the side\n relative to the parent. The second one, the anchor, set the alignment within\n the side selected by the `preferred_positions`. Both settings are tables of\n priorities. The first available slot will be used. If there isn't enough\n space, then it will fallback to the next until it is possible to fit the\n drawable. This is meant to avoid going offscreen.\n\n The `args.preferred_positions` look like this:\n\n    {\"top\", \"right\", \"left\", \"bottom\"}\n\n The `args.preferred_anchors` are:\n\n * \"front\": The closest to the origin (0,0)\n * \"middle\": Centered aligned with the parent\n * \"back\": The opposite side compared to `front`\n\n In that case, if there is room on the top of the geometry, then it will have\n priority, followed by all the others, in order.\n\n\n\n![Usage example](../images/AUTOGEN_awful_placement_next_to.svg)\n",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":{
        "args":["args.mode","args.preferred_positions","args.preferred_anchors","args.geometry"]
      },
      "summary":"Move a drawable to a relative position next to another one.",
      "name":"awful.placement.next_to",
      "kind":"static module functions",
      "usage":["for _, pos in ipairs{&#34left&#34, &#34right&#34, &#34top&#34, &#34bottom&#34} do\n    for _, anchor in ipairs{&#34front&#34, &#34middle&#34, &#34back&#34} do\n        awful.placement.next_to(\n            client.focus,\n            {\n                preferred_positions = pos,\n                preferred_anchors   = anchor,\n                geometry            = parent_client,\n            }\n        )\n    end\nend\n\nThe `args.mode` parameters allows to control from which `next_to` takes its\nsource object from. The valid values are:\n\n* geometry: Next to this geometry, `args.geometry` has to be set.\n* cursor: Next to the mouse.\n* cursor_inside\n* geometry_inside\n"],
      "args":"(d, args)",
      "type":"staticfct",
      "lineno":1750
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" The arguments",
          "d":" A drawable (like `client` or `wibox`)"
        }
      },
      "summary":"Restore the geometry.",
      "name":"awful.placement.restore",
      "modifiers":{
        "return":[{
            "type":"boolean"
          }],
        "param":{
          "1":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          }
        },
        "field":{
          "1":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "optchain":"client.focus",
            "type":"drawable",
            "opt":"client.focus"
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"([d=client.focus[, args={}]])",
      "tags":[],
      "lineno":1878
    },{
      "parameter":"field",
      "params":{
        "1":"d",
        "2":"args",
        "map":{
          "args":" Other arguments",
          "d":" A drawable (like `client`, `mouse` or `wibox`)"
        }
      },
      "modifiers":{
        "field":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "return":[{
            "type":"table"
          }],
        "param":{
          "1":{
            "type":"drawable"
          },
          "2":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "args":{
            "optchain":"{}",
            "type":"table",
            "opt":"{}"
          },
          "d":{
            "type":"drawable"
          }
        },
        "usage":[[]]
      },
      "description":"\n\n\n![Usage example](../images/AUTOGEN_awful_placement_skip_fullscreen.svg)\n\n**Usage example output**:\n\n\n",
      "tags":[],
      "section":"staticfct",
      "inferred":true,
      "subparams":[],
      "summary":"Skip all preceding results of placement pipeline for fullscreen clients.",
      "name":"awful.placement.skip_fullscreen",
      "kind":"static module functions",
      "usage":["-- using just no_offscreen with honor_workarea:\nawful.placement.no_offscreen(c, {honor_workarea=true, })\n-- using no_offscreen + skip_fullscreen:\nlocal f = (awful.placement.no_offscreen + awful.placement.skip_fullscreen)\nf(c, {honor_workarea=true, })\n"],
      "args":"(d[, args={}])",
      "type":"staticfct",
      "lineno":1937
    }],
  "type":"module",
  "file":"/home/cji/portless/awesome/build/lib/awful/placement.lua",
  "package":"awful",
  "tags":{
    "author":["Emmanuel Lepage Vallee &lt;elv1313@gmail.com&gt;","Julien Danjou &lt;julien@danjou.info&gt;"],
    "copyright":"2008 Julien Danjou, Emmanuel Lepage Vallee 2016"
  },
  "lineno":98
}