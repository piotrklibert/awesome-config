{
  "inferred":true,
  "kind":"popups_and_bars",
  "mod_name":"awful.hotkeys_popup.widget",
  "summary":"Popup widget which shows current hotkeys and their descriptions.",
  "sections":{
    "by_name":[]
  },
  "name":"awful.hotkeys_popup.widget",
  "modifiers":{
    "copyright":[],
    "author":[[]]
  },
  "description":"\n\n It's easy to add hotkeys for your favorite application. Below is how to add\n hotkeys for firefox to the previously created `hotkeys_popup` in `rc.lua`.\n\n    -- Create the rule that we will use to match for the application.\n    local fire_rule = { class = { \"firefox\", \"Firefox\" } }\n    for group_name, group_data in pairs({\n        [\"Firefox: tabs\"] = { color = \"#009F00\", rule_any = fire_rule }\n    }) do\n        hotkeys_popup.add_group_rules(group_name, group_data)\n    end\n\n    -- Table with all of our hotkeys\n    local firefox_keys = {\n\n        [\"Firefox: tabs\"] = {{\n            modifiers = { \"Mod1\" },\n            keys = {\n                [\"1..9\"] = \"go to tab\"\n            }\n        }, {\n            modifiers = { \"Ctrl\" },\n            keys = {\n                t = \"new tab\",\n                w = 'close tab',\n                ['Tab'] = \"next tab\"\n            }\n        }, {\n            modifiers = { \"Ctrl\", \"Shift\" },\n            keys = {\n              ['Tab'] = \"previous tab\"\n            }\n        }}\n    }\n\n    hotkeys_popup.add_hotkeys(firefox_keys)\n\n\n Example of having different types of hotkey popups:\n\n    awful.keyboard.append_global_keybindings({\n        awful.key({modkey}, \"/\", function()\n          hotkeys_popup.show_help()\n        end, nil, {\n          description = \"show help (all)\", group=\"HELP\"\n        }),\n        awful.key({\"Shift\", modkey}, \"/\", function()\n          hotkeys_popup.show_help(nil, nil, {show_awesome_keys=false})\n        end, nil, {\n          description = \"show help for current app\", group=\"HELP\"\n        }),\n        awful.key({altkey, modkey}, \"/\", function()\n          hotkeys_popup.show_help({}, nil, {show_awesome_keys=true})\n        end, nil, {\n          description = \"show help for awesome only\", group=\"HELP\"\n        })\n        -- (more hotkeys go here)\n    })\n\n",
  "items":[{
      "inferred":true,
      "subparams":{
        "widget":["widget.hide_without_description"]
      },
      "parameter":"field",
      "params":{
        "1":"boolean",
        "map":{
          "widget.hide_without_description":"",
          "boolean":""
        }
      },
      "summary":"Don't show hotkeys without descriptions.",
      "name":"widget.hide_without_description",
      "modifiers":{
        "return":[],
        "param":[[]],
        "field":{
          "1":{
            "type":"boolean"
          },
          "2":[],
          "widget.hide_without_description":{
            "type":"boolean"
          },
          "boolean":[]
        }
      },
      "description":"",
      "type":"field",
      "section":"field",
      "kind":"fields",
      "args":"(boolean)",
      "tags":[],
      "lineno":114
    },{
      "inferred":true,
      "subparams":{
        "widget":["widget.merge_duplicates"]
      },
      "parameter":"field",
      "params":{
        "1":"boolean",
        "map":{
          "widget.merge_duplicates":"",
          "boolean":""
        }
      },
      "summary":"Merge hotkey records into one if they have the same modifiers and\n description.",
      "name":"widget.merge_duplicates",
      "modifiers":{
        "return":[],
        "param":[[]],
        "field":{
          "1":{
            "type":"boolean"
          },
          "2":[],
          "widget.merge_duplicates":{
            "type":"boolean"
          },
          "boolean":[]
        }
      },
      "description":" Records with five or more keys will abbreviate them.\n\n This property only affects hotkey records added via `awful.key` keybindings.\n Cheatsheets for external programs are static and will present merged records\n regardless of the value of this property.",
      "type":"field",
      "section":"field",
      "kind":"fields",
      "args":"(boolean)",
      "tags":[],
      "lineno":124
    },{
      "parameter":"field",
      "params":{
        "1":"table",
        "map":{
          "widget.labels":"",
          "table":""
        }
      },
      "modifiers":{
        "return":[],
        "param":[[]],
        "field":{
          "1":{
            "type":"table"
          },
          "2":[],
          "widget.labels":{
            "type":"table"
          },
          "table":[]
        }
      },
      "description":"",
      "tags":[],
      "section":"table",
      "inferred":true,
      "subparams":{
        "widget":["widget.labels"]
      },
      "summary":"Labels used for displaying human-readable keynames.",
      "name":"widget.labels",
      "kind":"tables",
      "lineno":129,
      "args":"(table)",
      "type":"table"
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"hotkeys_bg",
        "map":{
          "hotkeys_bg":""
        }
      },
      "summary":"Hotkeys widget background color.",
      "name":"beautiful.hotkeys_bg",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"color"
          },
          "hotkeys_bg":{
            "type":"color"
          }
        },
        "field":{
          "1":{
            "type":"color"
          },
          "hotkeys_bg":{
            "type":"color"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(hotkeys_bg)",
      "tags":[],
      "lineno":184
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"hotkeys_fg",
        "map":{
          "hotkeys_fg":""
        }
      },
      "summary":"Hotkeys widget foreground color.",
      "name":"beautiful.hotkeys_fg",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"color"
          },
          "hotkeys_fg":{
            "type":"color"
          }
        },
        "field":{
          "1":{
            "type":"color"
          },
          "hotkeys_fg":{
            "type":"color"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(hotkeys_fg)",
      "tags":[],
      "lineno":188
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"hotkeys_border_width",
        "map":{
          "hotkeys_border_width":""
        }
      },
      "summary":"Hotkeys widget border width.",
      "name":"beautiful.hotkeys_border_width",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"int"
          },
          "hotkeys_border_width":{
            "type":"int"
          }
        },
        "field":{
          "1":{
            "type":"int"
          },
          "hotkeys_border_width":{
            "type":"int"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(hotkeys_border_width)",
      "tags":[],
      "lineno":192
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"hotkeys_border_color",
        "map":{
          "hotkeys_border_color":""
        }
      },
      "summary":"Hotkeys widget border color.",
      "name":"beautiful.hotkeys_border_color",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"color"
          },
          "hotkeys_border_color":{
            "type":"color"
          }
        },
        "field":{
          "1":{
            "type":"color"
          },
          "hotkeys_border_color":{
            "type":"color"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(hotkeys_border_color)",
      "tags":[],
      "lineno":196
    },{
      "parameter":"field",
      "params":{
        "1":"hotkeys_shape",
        "map":{
          "hotkeys_shape":""
        }
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "param":{
          "1":{
            "optchain":true,
            "type":"gears.shape",
            "opt":true
          },
          "hotkeys_shape":{
            "optchain":true,
            "type":"gears.shape",
            "opt":true
          }
        },
        "field":{
          "1":{
            "optchain":true,
            "type":"gears.shape",
            "opt":true
          },
          "hotkeys_shape":{
            "optchain":true,
            "type":"gears.shape",
            "opt":true
          }
        }
      },
      "description":"",
      "tags":{
        "see":[]
      },
      "section":"beautiful",
      "inferred":true,
      "subparams":[],
      "summary":"Hotkeys widget shape.",
      "name":"beautiful.hotkeys_shape",
      "type":"beautiful",
      "args":"([hotkeys_shape])",
      "kind":"theme variables",
      "lineno":201
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"hotkeys_modifiers_fg",
        "map":{
          "hotkeys_modifiers_fg":""
        }
      },
      "summary":"Foreground color used for hotkey modifiers (Ctrl, Alt, Super, etc).",
      "name":"beautiful.hotkeys_modifiers_fg",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"color"
          },
          "hotkeys_modifiers_fg":{
            "type":"color"
          }
        },
        "field":{
          "1":{
            "type":"color"
          },
          "hotkeys_modifiers_fg":{
            "type":"color"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(hotkeys_modifiers_fg)",
      "tags":[],
      "lineno":205
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"hotkeys_label_bg",
        "map":{
          "hotkeys_label_bg":""
        }
      },
      "summary":"Background color used for miscellaneous labels of hotkeys widget.",
      "name":"beautiful.hotkeys_label_bg",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"color"
          },
          "hotkeys_label_bg":{
            "type":"color"
          }
        },
        "field":{
          "1":{
            "type":"color"
          },
          "hotkeys_label_bg":{
            "type":"color"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(hotkeys_label_bg)",
      "tags":[],
      "lineno":209
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"hotkeys_label_fg",
        "map":{
          "hotkeys_label_fg":""
        }
      },
      "summary":"Foreground color used for hotkey groups and other labels.",
      "name":"beautiful.hotkeys_label_fg",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"color"
          },
          "hotkeys_label_fg":{
            "type":"color"
          }
        },
        "field":{
          "1":{
            "type":"color"
          },
          "hotkeys_label_fg":{
            "type":"color"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(hotkeys_label_fg)",
      "tags":[],
      "lineno":213
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"hotkeys_font",
        "map":{
          "hotkeys_font":""
        }
      },
      "summary":"Main hotkeys widget font.",
      "name":"beautiful.hotkeys_font",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"string|lgi.Pango.FontDescription"
          },
          "hotkeys_font":{
            "type":"string|lgi.Pango.FontDescription"
          }
        },
        "field":{
          "1":{
            "type":"string|lgi.Pango.FontDescription"
          },
          "hotkeys_font":{
            "type":"string|lgi.Pango.FontDescription"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(hotkeys_font)",
      "tags":[],
      "lineno":217
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"hotkeys_description_font",
        "map":{
          "hotkeys_description_font":""
        }
      },
      "summary":"Font used for hotkeys' descriptions.",
      "name":"beautiful.hotkeys_description_font",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"string|lgi.Pango.FontDescription"
          },
          "hotkeys_description_font":{
            "type":"string|lgi.Pango.FontDescription"
          }
        },
        "field":{
          "1":{
            "type":"string|lgi.Pango.FontDescription"
          },
          "hotkeys_description_font":{
            "type":"string|lgi.Pango.FontDescription"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(hotkeys_description_font)",
      "tags":[],
      "lineno":221
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"hotkeys_group_margin",
        "map":{
          "hotkeys_group_margin":""
        }
      },
      "summary":"Margin between hotkeys groups.",
      "name":"beautiful.hotkeys_group_margin",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"int"
          },
          "hotkeys_group_margin":{
            "type":"int"
          }
        },
        "field":{
          "1":{
            "type":"int"
          },
          "hotkeys_group_margin":{
            "type":"int"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(hotkeys_group_margin)",
      "tags":[],
      "lineno":226
    },{
      "inferred":true,
      "subparams":{
        "args":["args.hide_without_description","args.merge_duplicates","args.width","args.height","args.bg","args.fg","args.border_width","args.border_color","args.shape","args.font","args.description_font","args.modifiers_fg","args.label_bg","args.label_fg","args.group_margin","args.labels","args.group_rules"]
      },
      "parameter":"field",
      "params":{
        "1":"args",
        "map":{
          "args.hide_without_description":" Don't show hotkeys without descriptions.",
          "args.labels":" Labels used for displaying human-readable keynames.",
          "args.description_font":" Font used for hotkeys' descriptions.",
          "args.bg":" Widget background color.",
          "args.modifiers_fg":" Foreground color used for hotkey\n modifiers (Ctrl, Alt, Super, etc).",
          "args.fg":" Widget foreground color.",
          "args.border_width":" Border width.",
          "args.label_bg":" Background color used for miscellaneous labels.",
          "args.width":" Widget width.",
          "args.group_rules":" Rules for showing 3rd-party hotkeys. @see `awful.hotkeys_popup.keys.vim`.",
          "args.border_color":" Border color.",
          "args.merge_duplicates":" Merge hotkey records into one if\n they have the same modifiers and description. Records with five keys or more\n will abbreviate them.",
          "args.label_fg":" Foreground color used for group and other\n labels.",
          "args":" Configuration options for the widget.",
          "args.height":" Widget height.",
          "args.group_margin":" Margin between hotkeys groups.",
          "args.shape":" Widget shape.",
          "args.font":" Main widget font."
        }
      },
      "summary":"Create an instance of widget with hotkeys help.",
      "name":"awful.widget.hotkeys_popup.widget.new",
      "modifiers":{
        "return":[[]],
        "param":{
          "1":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "2":{
            "type":"boolean",
            "opt":true
          },
          "3":{
            "type":"boolean",
            "opt":true
          },
          "4":{
            "type":"int",
            "opt":true
          },
          "5":{
            "type":"int",
            "opt":true
          },
          "6":{
            "type":"color",
            "opt":true
          },
          "7":{
            "type":"color",
            "opt":true
          },
          "8":{
            "type":"int",
            "opt":true
          },
          "9":{
            "type":"color",
            "opt":true
          },
          "10":{
            "type":"gears.shape",
            "opt":true
          },
          "11":{
            "type":"string|lgi.Pango.FontDescription",
            "opt":true
          },
          "12":{
            "type":"string|lgi.Pango.FontDescription",
            "opt":true
          },
          "13":{
            "type":"color",
            "opt":true
          },
          "14":{
            "type":"color",
            "opt":true
          },
          "15":{
            "type":"color",
            "opt":true
          },
          "16":{
            "type":"int",
            "opt":true
          },
          "17":{
            "type":"table",
            "opt":true
          },
          "18":{
            "type":"table",
            "opt":true
          },
          "args.hide_without_description":{
            "type":"boolean",
            "opt":true
          },
          "args.labels":{
            "type":"table",
            "opt":true
          },
          "args.description_font":{
            "type":"string|lgi.Pango.FontDescription",
            "opt":true
          },
          "args.bg":{
            "type":"color",
            "opt":true
          },
          "args.modifiers_fg":{
            "type":"color",
            "opt":true
          },
          "args.fg":{
            "type":"color",
            "opt":true
          },
          "args.border_width":{
            "type":"int",
            "opt":true
          },
          "args.label_bg":{
            "type":"color",
            "opt":true
          },
          "args.width":{
            "type":"int",
            "opt":true
          },
          "args.group_rules":{
            "type":"table",
            "opt":true
          },
          "args.border_color":{
            "type":"color",
            "opt":true
          },
          "args.merge_duplicates":{
            "type":"boolean",
            "opt":true
          },
          "args.label_fg":{
            "type":"color",
            "opt":true
          },
          "args":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "args.height":{
            "type":"int",
            "opt":true
          },
          "args.group_margin":{
            "type":"int",
            "opt":true
          },
          "args.shape":{
            "type":"gears.shape",
            "opt":true
          },
          "args.font":{
            "type":"string|lgi.Pango.FontDescription",
            "opt":true
          }
        },
        "field":{
          "1":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "2":{
            "type":"boolean",
            "opt":true
          },
          "3":{
            "type":"boolean",
            "opt":true
          },
          "4":{
            "type":"int",
            "opt":true
          },
          "5":{
            "type":"int",
            "opt":true
          },
          "6":{
            "type":"color",
            "opt":true
          },
          "7":{
            "type":"color",
            "opt":true
          },
          "8":{
            "type":"int",
            "opt":true
          },
          "9":{
            "type":"color",
            "opt":true
          },
          "10":{
            "type":"gears.shape",
            "opt":true
          },
          "11":{
            "type":"string|lgi.Pango.FontDescription",
            "opt":true
          },
          "12":{
            "type":"string|lgi.Pango.FontDescription",
            "opt":true
          },
          "13":{
            "type":"color",
            "opt":true
          },
          "14":{
            "type":"color",
            "opt":true
          },
          "15":{
            "type":"color",
            "opt":true
          },
          "16":{
            "type":"int",
            "opt":true
          },
          "17":{
            "type":"table",
            "opt":true
          },
          "18":{
            "type":"table",
            "opt":true
          },
          "args.hide_without_description":{
            "type":"boolean",
            "opt":true
          },
          "args.labels":{
            "type":"table",
            "opt":true
          },
          "args.description_font":{
            "type":"string|lgi.Pango.FontDescription",
            "opt":true
          },
          "args.bg":{
            "type":"color",
            "opt":true
          },
          "args.modifiers_fg":{
            "type":"color",
            "opt":true
          },
          "args.fg":{
            "type":"color",
            "opt":true
          },
          "args.border_width":{
            "type":"int",
            "opt":true
          },
          "args.label_bg":{
            "type":"color",
            "opt":true
          },
          "args.width":{
            "type":"int",
            "opt":true
          },
          "args.group_rules":{
            "type":"table",
            "opt":true
          },
          "args.border_color":{
            "type":"color",
            "opt":true
          },
          "args.merge_duplicates":{
            "type":"boolean",
            "opt":true
          },
          "args.label_fg":{
            "type":"color",
            "opt":true
          },
          "args":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "args.height":{
            "type":"int",
            "opt":true
          },
          "args.group_margin":{
            "type":"int",
            "opt":true
          },
          "args.shape":{
            "type":"gears.shape",
            "opt":true
          },
          "args.font":{
            "type":"string|lgi.Pango.FontDescription",
            "opt":true
          }
        }
      },
      "description":"",
      "type":"constructorfct",
      "section":"constructorfct",
      "kind":"constructors",
      "args":"([args])",
      "tags":[],
      "lineno":251
    },{
      "inferred":true,
      "subparams":{
        "show_args":["show_args.show_awesome_keys"]
      },
      "parameter":"field",
      "params":{
        "1":"c",
        "2":"s",
        "3":"show_args",
        "map":{
          "s":" Screen.",
          "show_args.show_awesome_keys":" Show AwesomeWM hotkeys.\n When set to `false` only app-specific hotkeys will be shown.",
          "c":" Client.",
          "show_args":" Additional arguments."
        }
      },
      "summary":"Show popup with hotkeys help.",
      "name":"show_help",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":true,
            "type":"client",
            "opt":true
          },
          "2":{
            "optchain":true,
            "type":"screen",
            "opt":true
          },
          "3":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "4":{
            "type":"boolean",
            "opt":"true"
          },
          "s":{
            "optchain":true,
            "type":"screen",
            "opt":true
          },
          "show_args.show_awesome_keys":{
            "type":"boolean",
            "opt":"true"
          },
          "c":{
            "optchain":true,
            "type":"client",
            "opt":true
          },
          "show_args":{
            "optchain":true,
            "type":"table",
            "opt":true
          }
        },
        "field":{
          "1":{
            "optchain":true,
            "type":"client",
            "opt":true
          },
          "2":{
            "optchain":true,
            "type":"screen",
            "opt":true
          },
          "3":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "4":{
            "type":"boolean",
            "opt":"true"
          },
          "s":{
            "optchain":true,
            "type":"screen",
            "opt":true
          },
          "show_args.show_awesome_keys":{
            "type":"boolean",
            "opt":"true"
          },
          "c":{
            "optchain":true,
            "type":"client",
            "opt":true
          },
          "show_args":{
            "optchain":true,
            "type":"table",
            "opt":true
          }
        }
      },
      "description":"",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"([c[, s[, show_args]]])",
      "tags":[],
      "lineno":678
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"hotkeys",
        "map":{
          "hotkeys":" Table with bindings,\n see `awful.hotkeys_popup.key.vim` as an example."
        }
      },
      "summary":"Add hotkey descriptions for third-party applications.",
      "name":"add_hotkeys",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"table"
          },
          "hotkeys":{
            "type":"table"
          }
        },
        "field":{
          "1":{
            "type":"table"
          },
          "hotkeys":{
            "type":"table"
          }
        }
      },
      "description":"",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"(hotkeys)",
      "tags":[],
      "lineno":738
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"group",
        "2":"data",
        "map":{
          "data":" rule data for the group\n see `awful.hotkeys_popup.key.vim` as an example.",
          "group":" hotkeys group name,"
        }
      },
      "summary":"Add hotkey group rules for third-party applications.",
      "name":"add_group_rules",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"string"
          },
          "2":{
            "type":"table"
          },
          "data":{
            "type":"table"
          },
          "group":{
            "type":"string"
          }
        },
        "field":{
          "1":{
            "type":"string"
          },
          "2":{
            "type":"table"
          },
          "data":{
            "type":"table"
          },
          "group":{
            "type":"string"
          }
        }
      },
      "description":"",
      "type":"method",
      "section":"method",
      "kind":"object methods ",
      "args":"(group, data)",
      "tags":[],
      "lineno":761
    },{
      "inferred":true,
      "subparams":{
        "args":["args.show_awesome_keys"]
      },
      "parameter":"field",
      "params":{
        "1":"c",
        "2":"s",
        "3":"args",
        "map":{
          "s":" Screen.",
          "args":" Additional arguments.",
          "c":" Client.",
          "args.show_awesome_keys":" Show AwesomeWM hotkeys.\n When set to `false` only app-specific hotkeys will be shown."
        }
      },
      "summary":"Show popup with hotkeys help (default widget instance will be used).",
      "name":"show_help",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":true,
            "type":"client",
            "opt":true
          },
          "2":{
            "optchain":true,
            "type":"screen",
            "opt":true
          },
          "3":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "4":{
            "type":"boolean",
            "opt":"true"
          },
          "s":{
            "optchain":true,
            "type":"screen",
            "opt":true
          },
          "args":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "c":{
            "optchain":true,
            "type":"client",
            "opt":true
          },
          "args.show_awesome_keys":{
            "type":"boolean",
            "opt":"true"
          }
        },
        "field":{
          "1":{
            "optchain":true,
            "type":"client",
            "opt":true
          },
          "2":{
            "optchain":true,
            "type":"screen",
            "opt":true
          },
          "3":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "4":{
            "type":"boolean",
            "opt":"true"
          },
          "s":{
            "optchain":true,
            "type":"screen",
            "opt":true
          },
          "args":{
            "optchain":true,
            "type":"table",
            "opt":true
          },
          "c":{
            "optchain":true,
            "type":"client",
            "opt":true
          },
          "args.show_awesome_keys":{
            "type":"boolean",
            "opt":"true"
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"([c[, s[, args]]])",
      "tags":[],
      "lineno":782
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"hotkeys",
        "map":{
          "hotkeys":" Table with bindings,\n see `awful.hotkeys_popup.key.vim` as an example."
        }
      },
      "summary":"Add hotkey descriptions for third-party applications\n (default widget instance will be used).",
      "name":"add_hotkeys",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"table"
          },
          "hotkeys":{
            "type":"table"
          }
        },
        "field":{
          "1":{
            "type":"table"
          },
          "hotkeys":{
            "type":"table"
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(hotkeys)",
      "tags":[],
      "lineno":791
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"group",
        "2":"data",
        "map":{
          "data":" rule data for the group\n see `awful.hotkeys_popup.key.vim` as an example.",
          "group":" rule group name,"
        }
      },
      "summary":"Add hotkey group rules for third-party applications\n (default widget instance will be used).",
      "name":"add_group_rules",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"string"
          },
          "2":{
            "type":"table"
          },
          "data":{
            "type":"table"
          },
          "group":{
            "type":"string"
          }
        },
        "field":{
          "1":{
            "type":"string"
          },
          "2":{
            "type":"table"
          },
          "data":{
            "type":"table"
          },
          "group":{
            "type":"string"
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(group, data)",
      "tags":[],
      "lineno":801
    }],
  "type":"popupmod",
  "file":"/home/cji/portless/awesome/build/lib/awful/hotkeys_popup/widget.lua",
  "package":"",
  "tags":{
    "author":["Yauheni Kirylau &lt;yawghen@gmail.com&gt;"],
    "copyright":"2014-2015 Yauheni Kirylau"
  },
  "lineno":68
}