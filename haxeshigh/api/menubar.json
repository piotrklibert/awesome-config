{
  "inferred":true,
  "kind":"popups_and_bars",
  "mod_name":"menubar",
  "summary":"Menubar module, which aims to provide a freedesktop menu alternative.",
  "sections":{
    "by_name":[]
  },
  "name":"menubar",
  "modifiers":{
    "copyright":[],
    "author":[[]]
  },
  "description":"\n\n List of menubar keybindings:\n ---\n\n <table class='widget_list' border=1>\n <tr style='font-weight: bold;'>\n  <th align='center'>Keybinding</th>\n  <th align='center'>Description</th>\n </tr>                                                                                    </td></tr>\n  <tr><td><kbd>Left</kbd><kbd>C-j</kbd></td><td> select an item on the left                 </td></tr>\n  <tr><td><kbd>Right</kbd><kbd>C-k</kbd></td><td> select an item on the right                </td></tr>\n  <tr><td><kbd>Backspace    </kbd></td><td> exit the current category if we are in any </td></tr>\n  <tr><td><kbd>Escape       </kbd></td><td> exit the current directory or exit menubar </td></tr>\n  <tr><td><kbd>Home         </kbd></td><td> select the first item                      </td></tr>\n  <tr><td><kbd>End          </kbd></td><td> select the last                            </td></tr>\n  <tr><td><kbd>Return       </kbd></td><td> execute the entry                          </td></tr>\n  <tr><td><kbd>C-Return     </kbd></td><td> execute the command with awful.spawn       </td></tr>\n  <tr><td><kbd>C-M-Return   </kbd></td><td> execute the command in a terminal          </td></tr>\n </table>\n",
  "items":[{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "summary":"Menubar normal text color.",
      "name":"beautiful.menubar_fg_normal",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(color)",
      "tags":[],
      "lineno":53
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "summary":"Menubar normal background color.",
      "name":"beautiful.menubar_bg_normal",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(color)",
      "tags":[],
      "lineno":57
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"menubar_border_width",
        "map":{
          "menubar_border_width":""
        }
      },
      "summary":"Menubar border width.",
      "name":"beautiful.menubar_border_width",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":"0",
            "type":"number",
            "opt":"0"
          },
          "menubar_border_width":{
            "optchain":"0",
            "type":"number",
            "opt":"0"
          }
        },
        "field":{
          "1":{
            "optchain":"0",
            "type":"number",
            "opt":"0"
          },
          "menubar_border_width":{
            "optchain":"0",
            "type":"number",
            "opt":"0"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"([menubar_border_width=0])",
      "tags":[],
      "lineno":61
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "summary":"Menubar border color.",
      "name":"beautiful.menubar_border_color",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(color)",
      "tags":[],
      "lineno":65
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "summary":"Menubar selected item text color.",
      "name":"beautiful.menubar_fg_focus",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(color)",
      "tags":[],
      "lineno":69
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"color",
        "map":{
          "color":""
        }
      },
      "summary":"Menubar selected item background color.",
      "name":"beautiful.menubar_bg_focus",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "color":[]
        },
        "field":{
          "1":[],
          "color":[]
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"(color)",
      "tags":[],
      "lineno":73
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"font",
        "map":{
          "font":""
        }
      },
      "summary":"Menubar font.",
      "name":"beautiful.menubar_font",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":"beautiful.font",
            "opt":"beautiful.font"
          },
          "font":{
            "optchain":"beautiful.font",
            "opt":"beautiful.font"
          }
        },
        "field":{
          "1":{
            "optchain":"beautiful.font",
            "opt":"beautiful.font"
          },
          "font":{
            "optchain":"beautiful.font",
            "opt":"beautiful.font"
          }
        }
      },
      "description":"",
      "type":"beautiful",
      "section":"beautiful",
      "kind":"theme variables",
      "args":"([font=beautiful.font])",
      "tags":[],
      "lineno":78
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"cache_entries",
        "map":{
          "cache_entries":""
        }
      },
      "summary":"When true the .desktop files will be reparsed only when the\n extension is initialized.",
      "name":"cache_entries",
      "modifiers":{
        "return":[],
        "field":{
          "1":{
            "optchain":"true",
            "type":"boolean",
            "opt":"true"
          },
          "cache_entries":{
            "optchain":"true",
            "type":"boolean",
            "opt":"true"
          }
        }
      },
      "description":" Use this if menubar takes much time to\n open.",
      "type":"field",
      "section":"field",
      "kind":"fields",
      "args":"([cache_entries=true])",
      "tags":[],
      "lineno":89
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"show_categories",
        "map":{
          "show_categories":""
        }
      },
      "summary":"When true the categories will be shown alongside application\n entries.",
      "name":"show_categories",
      "modifiers":{
        "return":[],
        "field":{
          "1":{
            "optchain":"true",
            "type":"boolean",
            "opt":"true"
          },
          "show_categories":{
            "optchain":"true",
            "type":"boolean",
            "opt":"true"
          }
        }
      },
      "description":"",
      "type":"field",
      "section":"field",
      "kind":"fields",
      "args":"([show_categories=true])",
      "tags":[],
      "lineno":94
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"match_empty",
        "map":{
          "match_empty":""
        }
      },
      "summary":"When false will hide results if the current query is empty",
      "name":"match_empty",
      "modifiers":{
        "return":[],
        "field":{
          "1":{
            "optchain":"true",
            "type":"boolean",
            "opt":"true"
          },
          "match_empty":{
            "optchain":"true",
            "type":"boolean",
            "opt":"true"
          }
        }
      },
      "description":"",
      "type":"field",
      "section":"field",
      "kind":"fields",
      "args":"([match_empty=true])",
      "tags":[],
      "lineno":98
    },{
      "inferred":true,
      "subparams":{
        "geometry":["geometry.x","geometry.y","geometry.width","geometry.height"]
      },
      "parameter":"field",
      "params":{
        "map":{
          "geometry.height":" A forced height",
          "geometry.width":" A forced width",
          "geometry.x":" A forced horizontal position",
          "geometry.y":" A forced vertical position"
        }
      },
      "summary":"Specifies the geometry of the menubar.",
      "name":"geometry",
      "modifiers":{
        "return":[],
        "field":{
          "1":{
            "type":"number"
          },
          "2":{
            "type":"number"
          },
          "3":{
            "type":"number"
          },
          "4":{
            "type":"number"
          },
          "geometry.height":{
            "type":"number"
          },
          "geometry.width":{
            "type":"number"
          },
          "geometry.x":{
            "type":"number"
          },
          "geometry.y":{
            "type":"number"
          }
        }
      },
      "description":" This is a table with the keys\n x, y, width and height. Missing values are replaced via the screen's\n geometry. However, missing height is replaced by the font size.",
      "type":"table",
      "section":"table",
      "kind":"tables",
      "args":"()",
      "tags":[],
      "lineno":108
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"right_margin",
        "map":{
          "right_margin":""
        }
      },
      "summary":"Width of blank space left in the right side.",
      "name":"right_margin",
      "modifiers":{
        "return":[],
        "field":{
          "1":{
            "type":"number"
          },
          "right_margin":{
            "type":"number"
          }
        }
      },
      "description":"",
      "type":"field",
      "section":"field",
      "kind":"fields",
      "args":"(right_margin)",
      "tags":[],
      "lineno":115
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"right_label",
        "map":{
          "right_label":""
        }
      },
      "summary":"Label used for \"Next page\", default \"▶▶\".",
      "name":"right_label",
      "modifiers":{
        "return":[],
        "field":{
          "1":{
            "optchain":"\"▶▶\"",
            "type":"string",
            "opt":"\"▶▶\""
          },
          "right_label":{
            "optchain":"\"▶▶\"",
            "type":"string",
            "opt":"\"▶▶\""
          }
        }
      },
      "description":"",
      "type":"field",
      "section":"field",
      "kind":"fields",
      "args":"([right_label=\"▶▶\"])",
      "tags":[],
      "lineno":119
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"left_label",
        "map":{
          "left_label":""
        }
      },
      "summary":"Label used for \"Previous page\", default \"◀◀\".",
      "name":"left_label",
      "modifiers":{
        "return":[],
        "field":{
          "1":{
            "optchain":"\"◀◀\"",
            "type":"string",
            "opt":"\"◀◀\""
          },
          "left_label":{
            "optchain":"\"◀◀\"",
            "type":"string",
            "opt":"\"◀◀\""
          }
        }
      },
      "description":"",
      "type":"field",
      "section":"field",
      "kind":"fields",
      "args":"([left_label=\"◀◀\"])",
      "tags":[],
      "lineno":123
    },{
      "parameter":"field",
      "params":{
        "map":[]
      },
      "modifiers":{
        "see":[[]],
        "return":[],
        "field":[]
      },
      "description":" This will merge with the default parameters, overriding affected values.",
      "tags":{
        "see":[]
      },
      "section":"table",
      "inferred":true,
      "subparams":[],
      "summary":"Allows user to specify custom parameters for prompt.run function\n (like colors).",
      "name":"prompt_args",
      "kind":"tables",
      "lineno":132,
      "args":"()",
      "type":"table"
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"scr",
        "map":{
          "scr":" Screen."
        }
      },
      "summary":"Refresh menubar's cache by reloading .desktop files.",
      "name":"refresh",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":true,
            "type":"screen",
            "opt":true
          },
          "scr":{
            "optchain":true,
            "type":"screen",
            "opt":true
          }
        },
        "field":{
          "1":{
            "optchain":true,
            "type":"screen",
            "opt":true
          },
          "scr":{
            "optchain":true,
            "type":"screen",
            "opt":true
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"([scr])",
      "tags":[],
      "lineno":400
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"scr",
        "map":{
          "scr":" Screen."
        }
      },
      "summary":"Show the menubar on the given screen.",
      "name":"show",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":true,
            "opt":true
          },
          "scr":{
            "optchain":true,
            "opt":true
          }
        },
        "field":{
          "1":{
            "optchain":true,
            "opt":true
          },
          "scr":{
            "optchain":true,
            "opt":true
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"([scr])",
      "tags":[],
      "lineno":457
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "map":[]
      },
      "summary":"Hide the menubar.",
      "name":"hide",
      "modifiers":{
        "field":[],
        "return":[]
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"()",
      "tags":[],
      "lineno":536
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"scr",
        "map":{
          "scr":" Screen."
        }
      },
      "summary":"Get a menubar wibox.",
      "name":"get",
      "modifiers":{
        "return":[[]],
        "param":{
          "1":{
            "optchain":true,
            "type":"screen",
            "opt":true
          },
          "scr":{
            "optchain":true,
            "type":"screen",
            "opt":true
          }
        },
        "field":{
          "1":{
            "optchain":true,
            "type":"screen",
            "opt":true
          },
          "scr":{
            "optchain":true,
            "type":"screen",
            "opt":true
          }
        }
      },
      "description":"",
      "type":"deprecated",
      "section":"deprecated",
      "kind":"deprecated functions",
      "args":"([scr])",
      "tags":[],
      "lineno":547
    }],
  "type":"popupmod",
  "file":"/home/cji/portless/awesome/build/lib/menubar/init.lua",
  "package":"",
  "tags":{
    "author":["Alexander Yakushev &lt;yakushev.alex@gmail.com&gt;"],
    "copyright":"2011-2012 Alexander Yakushev"
  },
  "lineno":28
}