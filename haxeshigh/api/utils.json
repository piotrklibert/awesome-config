{
  "inferred":true,
  "kind":"libraries",
  "mod_name":"utils",
  "summary":"Utility module for menubar",
  "sections":{
    "by_name":[]
  },
  "name":"menubar.utils",
  "modifiers":{
    "copyright":[],
    "author":[[]]
  },
  "description":"",
  "items":[{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"string",
        "map":{
          "string":""
        }
      },
      "summary":"Terminal which applications that need terminal would open in.",
      "name":"terminal",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":"\"xterm\"",
            "opt":"\"xterm\""
          },
          "string":{
            "optchain":"\"xterm\"",
            "opt":"\"xterm\""
          }
        },
        "field":{
          "1":{
            "optchain":"\"xterm\"",
            "opt":"\"xterm\""
          },
          "string":{
            "optchain":"\"xterm\"",
            "opt":"\"xterm\""
          }
        }
      },
      "description":"",
      "type":"field",
      "section":"field",
      "kind":"fields",
      "args":"([string=\"xterm\"])",
      "tags":[],
      "lineno":35
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"string",
        "map":{
          "string":""
        }
      },
      "summary":"Name of the WM for the OnlyShowIn entry in the .desktop file.",
      "name":"wm_name",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "optchain":"\"awesome\"",
            "opt":"\"awesome\""
          },
          "string":{
            "optchain":"\"awesome\"",
            "opt":"\"awesome\""
          }
        },
        "field":{
          "1":{
            "optchain":"\"awesome\"",
            "opt":"\"awesome\""
          },
          "string":{
            "optchain":"\"awesome\"",
            "opt":"\"awesome\""
          }
        }
      },
      "description":"",
      "type":"field",
      "section":"field",
      "kind":"fields",
      "args":"([string=\"awesome\"])",
      "tags":[],
      "lineno":43
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"s",
        "map":{
          "s":" string to trim"
        }
      },
      "summary":"Remove CR newline from the end of the string.",
      "name":"menubar.utils.rtrim",
      "modifiers":{
        "return":[],
        "param":{
          "1":[],
          "s":[]
        },
        "field":{
          "1":[],
          "s":[]
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(s)",
      "tags":[],
      "lineno":204
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"icon_file",
        "map":{
          "icon_file":" Short or full name of the icon."
        }
      },
      "summary":"Lookup an icon in different folders of the filesystem.",
      "name":"menubar.utils.lookup_icon_uncached",
      "modifiers":{
        "return":[{
            "type":"string|boolean"
          }],
        "param":{
          "1":{
            "type":"string"
          },
          "icon_file":{
            "type":"string"
          }
        },
        "field":{
          "1":{
            "type":"string"
          },
          "icon_file":{
            "type":"string"
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(icon_file)",
      "tags":[],
      "lineno":216
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"icon",
        "map":{
          "icon":" Short or full name of the icon."
        }
      },
      "summary":"Lookup an icon in different folders of the filesystem (cached).",
      "name":"menubar.utils.lookup_icon",
      "modifiers":{
        "return":[[]],
        "param":{
          "1":[],
          "icon":[]
        },
        "field":{
          "1":[],
          "icon":[]
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(icon)",
      "tags":[],
      "lineno":252
    },{
      "inferred":true,
      "subparams":[],
      "parameter":"field",
      "params":{
        "1":"file",
        "map":{
          "file":" The .desktop file."
        }
      },
      "summary":"Parse a .desktop file.",
      "name":"menubar.utils.parse_desktop_file",
      "modifiers":{
        "return":[[]],
        "param":{
          "1":[],
          "file":[]
        },
        "field":{
          "1":[],
          "file":[]
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(file)",
      "tags":[],
      "lineno":263
    },{
      "inferred":true,
      "subparams":{
        "callback":["callback.programs"]
      },
      "parameter":"field",
      "params":{
        "1":"dir_path",
        "2":"callback",
        "map":{
          "callback":" Will be fired when all the files were parsed\n with the resulting list of menu entries as argument.",
          "dir_path":" The directory path.",
          "callback.programs":" Paths of found .desktop files."
        }
      },
      "summary":"Parse a directory with .desktop files recursively.",
      "name":"menubar.utils.parse_dir",
      "modifiers":{
        "return":[],
        "param":{
          "1":{
            "type":"string"
          },
          "2":{
            "type":"function"
          },
          "3":{
            "type":"table"
          },
          "callback":{
            "type":"function"
          },
          "dir_path":{
            "type":"string"
          },
          "callback.programs":{
            "type":"table"
          }
        },
        "field":{
          "1":{
            "type":"string"
          },
          "2":{
            "type":"function"
          },
          "3":{
            "type":"table"
          },
          "callback":{
            "type":"function"
          },
          "dir_path":{
            "type":"string"
          },
          "callback.programs":{
            "type":"table"
          }
        }
      },
      "description":"",
      "type":"staticfct",
      "section":"staticfct",
      "kind":"static module functions",
      "args":"(dir_path, callback)",
      "tags":[],
      "lineno":360
    }],
  "type":"module",
  "file":"/home/cji/portless/awesome/build/lib/menubar/utils.lua",
  "package":"menubar",
  "tags":{
    "author":["Antonio Terceiro"],
    "copyright":"2009, 2011-2012 Antonio Terceiro, Alexander Yakushev"
  },
  "lineno":9
}