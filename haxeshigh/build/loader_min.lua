local a={__newindex=function(b,c,d)local e=b.length;b.length=c>=e and c+1 or e;rawset(b,c,d)end}local function f(g,h)g.length=h;return setmetatable(g,a)end;local function i(b,c,d)b.__fields__[c]=true;rawset(b,c,d)end;local j={__newindex=i}local function k(...)local l={}local m={__fields__=l}local n=select('#',...)local g={...}local o=1;while o<n do local d=g[o]l[d]=true;m[d]=g[o+1]o=o+2 end;return setmetatable(m,j)end;local function p()return setmetatable({__fields__={}},j)end;local function q(r)return setmetatable(r,j)end;local function s(t)return setmetatable({__fields__={}},{__newindex=i,__index=t})end;local u={}local v=p()local w=p()local x=p()local y=p()local z=p()local A=p()local B=p()__lua_lib_luautf8_Utf8=_G.require("lua-utf8")local C=p()local D=p()local E=p()local F=p()__awful_Naughty=_G.require("naughty")__lib_Inspect=_G.require("inspect")__lua_Boot=p()__utils_NaughtyLogger=p()local G,H,I,J,K,L,M,N,O,P,Q;local R={}local S={}B.new=function()local self=s(B.prototype)B.super(self)return self end;B.super=function(self)f(self,0)end;B.prototype=k()B.prototype.concat=function(self,T)local U=f({},0)local V=0;local W=self;while V<W.length do local X=W[V]V=V+1;U:push(X)end;local Y=0;while Y<T.length do local Z=T[Y]Y=Y+1;U:push(Z)end;do return U end end;B.prototype.join=function(self,_)local a0={}local a1=self;local a2=0;local X=q({__fields__={hasNext=true,next=true},hasNext=function(self)do return a2<a1.length end end,next=function(self)a2=a2+1;do return a1[a2-1]end end})while X:hasNext()do _G.table.insert(a0,F.string(X:next()))end;do return _G.table.concat(a0,_)end end;B.prototype.pop=function(self)if self.length==0 then do return nil end end;local m=self[self.length-1]self[self.length-1]=nil;self.length=self.length-1;do return m end end;B.prototype.push=function(self,a3)self[self.length]=a3;do return self.length end end;B.prototype.reverse=function(self)local a4;local X=0;while X<F.int(self.length/2)do a4=self[X]self[X]=self[self.length-X-1]self[self.length-X-1]=a4;X=X+1 end end;B.prototype.shift=function(self)if self.length==0 then do return nil end end;local m=self[0]if self.length==1 then self[0]=nil else if self.length>1 then self[0]=self[1]_G.table.remove(self,1)end end;local a4=self;a4.length=a4.length-1;do return m end end;B.prototype.slice=function(self,a5,a6)if a6==nil or a6>self.length then a6=self.length else if a6<0 then a6=_G.math.fmod(self.length-_G.math.fmod(-a6,self.length),self.length)end end;if a5<0 then a5=_G.math.fmod(self.length-_G.math.fmod(-a5,self.length),self.length)end;if a5>a6 or a5>self.length then do return f({},0)end end;local m=f({},0)local U=a5;local V=a6;while U<V do U=U+1;m:push(self[U-1])end;do return m end end;B.prototype.sort=function(self,a7)local X=0;local a8=self.length;while X<a8 do local a9=false;local aa=0;local n=a8-X-1;while aa<n do if a7(self[aa],self[aa+1])>0 then local a4=self[aa+1]self[aa+1]=self[aa]self[aa]=a4;a9=true end;aa=aa+1 end;if not a9 then break end;X=X+1 end end;B.prototype.splice=function(self,a5,e)if e<0 or a5>self.length then do return f({},0)end else if a5<0 then a5=self.length-_G.math.fmod(-a5,self.length)end end;e=D.min(e,self.length-a5)local m=f({},0)local U=a5;local V=a5+e;while U<V do U=U+1;local X=U-1;m:push(self[X])self[X]=self[X+e]end;local W=a5+e;local Y=self.length;while W<Y do W=W+1;local Z=W-1;self[Z]=self[Z+e]end;local a4=self;a4.length=a4.length-e;do return m end end;B.prototype.toString=function(self)local a0={}_G.table.insert(a0,"[")_G.table.insert(a0,self:join(","))_G.table.insert(a0,"]")do return _G.table.concat(a0,"")end end;B.prototype.unshift=function(self,a3)local e=self.length;local U=0;while U<e do U=U+1;local X=U-1;self[e-X]=self[e-X-1]end;self[0]=a3 end;B.prototype.insert=function(self,a5,a3)if a5>self.length then a5=self.length end;if a5<0 then a5=self.length+a5;if a5<0 then a5=0 end end;local ab=self.length;while ab>a5 do self[ab]=self[ab-1]ab=ab-1 end;self[a5]=a3 end;B.prototype.remove=function(self,a3)local U=0;local V=self.length;while U<V do U=U+1;local X=U-1;if self[X]==a3 then local W=X;local ac=self.length-1;while W<ac do W=W+1;local aa=W-1;self[aa]=self[aa+1]end;self[self.length-1]=nil;self.length=self.length-1;do return true end end end;do return false end end;B.prototype.indexOf=function(self,a3,ad)local a6=self.length;if ad==nil then ad=0 else if ad<0 then ad=self.length+ad;if ad<0 then ad=0 end end end;local U=ad;while U<a6 do U=U+1;local X=U-1;if a3==self[X]then do return X end end end;do return-1 end end;B.prototype.lastIndexOf=function(self,a3,ad)if ad==nil or ad>=self.length then ad=self.length-1 else if ad<0 then ad=self.length+ad;if ad<0 then do return-1 end end end end;local X=ad;while X>=0 do if self[X]==a3 then do return X end else X=X-1 end end;do return-1 end end;B.prototype.copy=function(self)local U=f({},0)local V=0;local W=self;while V<W.length do local X=W[V]V=V+1;U:push(X)end;do return U end end;B.prototype.map=function(self,a7)local U=f({},0)local V=0;local W=self;while V<W.length do local X=W[V]V=V+1;U:push(a7(X))end;do return U end end;B.prototype.filter=function(self,a7)local U=f({},0)local V=0;local W=self;while V<W.length do local X=W[V]V=V+1;if a7(X)then U:push(X)end end;do return U end end;B.prototype.iterator=function(self)local a1=self;local a2=0;do return q({__fields__={hasNext=true,next=true},hasNext=function(self)do return a2<a1.length end end,next=function(self)a2=a2+1;do return a1[a2-1]end end})end end;B.prototype.resize=function(self,e)if self.length<e then self.length=e else if self.length>e then local U=e;local V=self.length;while U<V do U=U+1;self[U-1]=nil end;self.length=e end end end;C.new={}C.main=function()_G.package.loaded.loader=nil;_G.package.loaded.app=nil;local ae=__lua_lib_luautf8_Utf8.find(_G.package.path,"haxeshigh/build",1,true)if(function()local af;if ae~=nil and ae>0 then af=ae-1 else af=-1 end;return af end)()==-1 then _G.package.path=F.string("/home/cji/portless/lua/awesome-config/haxeshigh/build/?.lua;")..F.string(_G.package.path)end;__utils_NaughtyLogger.log("Loaded.")end;D.new={}D.isNaN=function(a7)do return a7~=a7 end end;D.isFinite=function(a7)if a7>-_G.math.huge then do return a7<_G.math.huge end else do return false end end end;D.min=function(T,ag)if D.isNaN(T)or D.isNaN(ag)then do return 0/0 end else do return _G.math.min(T,ag)end end end;E.new=function(ah)local self=s(E.prototype)E.super(self,ah)self=ah;return self end;E.super=function(self,ah)end;E.__index=function(ai,c)if c=="length"then do return __lua_lib_luautf8_Utf8.len(ai)end else local aj=E.prototype;local ak=c;if(function()local af;if _G.type(aj)=="string"and(E.prototype[ak]~=nil or ak=="length")then af=true elseif aj.__fields__~=nil then af=aj.__fields__[ak]~=nil else af=aj[ak]~=nil end;return af end)()then do return E.prototype[c]end else if E.__oldindex~=nil then if _G.type(E.__oldindex)=="function"then do return E.__oldindex(ai,c)end else if _G.type(E.__oldindex)=="table"then do return E.__oldindex[c]end end end;do return nil end else do return nil end end end end end;E.fromCharCode=function(al)do return __lua_lib_luautf8_Utf8.char(al)end end;E.prototype=k()E.prototype.toUpperCase=function(self)do return __lua_lib_luautf8_Utf8.upper(self)end end;E.prototype.toLowerCase=function(self)do return __lua_lib_luautf8_Utf8.lower(self)end end;E.prototype.indexOf=function(self,am,an)if an==nil then an=1 else an=an+1 end;local ae=__lua_lib_luautf8_Utf8.find(self,am,an,true)if ae~=nil and ae>0 then do return ae-1 end else do return-1 end end end;E.prototype.lastIndexOf=function(self,am,an)local m=-1;if an==nil then an=__lua_lib_luautf8_Utf8.len(self)end;while true do local ao=m+1;if ao==nil then ao=1 else ao=ao+1 end;local ae=__lua_lib_luautf8_Utf8.find(self,am,ao,true)local ap=(function()local af;if ae~=nil and ae>0 then af=ae-1 else af=-1 end;return af end)()if ap==-1 or ap>an then break end;m=ap end;do return m end end;E.prototype.split=function(self,aq)local ar=1;local m=f({},0)while ar~=nil do local as=0;if __lua_lib_luautf8_Utf8.len(aq)>0 then as=__lua_lib_luautf8_Utf8.find(self,aq,ar,true)else if ar>=__lua_lib_luautf8_Utf8.len(self)then as=nil else as=ar+1 end end;if as~=nil then m:push(__lua_lib_luautf8_Utf8.sub(self,ar,as-1))ar=as+__lua_lib_luautf8_Utf8.len(aq)else m:push(__lua_lib_luautf8_Utf8.sub(self,ar,__lua_lib_luautf8_Utf8.len(self)))ar=nil end end;do return m end end;E.prototype.toString=function(self)do return self end end;E.prototype.substring=function(self,an,at)if at==nil then at=__lua_lib_luautf8_Utf8.len(self)end;if at<0 then at=0 end;if an<0 then an=0 end;if at<an then do return __lua_lib_luautf8_Utf8.sub(self,at+1,an)end else do return __lua_lib_luautf8_Utf8.sub(self,an+1,at)end end end;E.prototype.charAt=function(self,au)do return __lua_lib_luautf8_Utf8.sub(self,au+1,au+1)end end;E.prototype.charCodeAt=function(self,au)do return __lua_lib_luautf8_Utf8.byte(self,au+1)end end;E.prototype.substr=function(self,a5,e)if e==nil or e>a5+__lua_lib_luautf8_Utf8.len(self)then e=__lua_lib_luautf8_Utf8.len(self)else if e<0 then e=__lua_lib_luautf8_Utf8.len(self)+e end end;if a5<0 then a5=__lua_lib_luautf8_Utf8.len(self)+a5 end;if a5<0 then a5=0 end;do return __lua_lib_luautf8_Utf8.sub(self,a5+1,a5+e)end end;F.new={}F.string=function(ai)do return __lua_Boot.__string_rec(ai)end end;F.int=function(a3)if not D.isFinite(a3)or D.isNaN(a3)then do return 0 end else do return O(a3)end end end;__lua_Boot.new={}__lua_Boot.isArray=function(aj)if _G.type(aj)=="table"then if aj.__enum__==nil and _G.getmetatable(aj)~=nil then do return _G.getmetatable(aj).__index==B.prototype end else do return false end end else do return false end end end;__lua_Boot.printEnum=function(aj,ai)if aj.length==2 then do return aj[0]end else local am=F.string(F.string(aj[0]))..F.string("(")ai=F.string(ai)..F.string("\t")local U=2;local V=aj.length;while U<V do U=U+1;local X=U-1;if X~=2 then am=F.string(am)..F.string(F.string(",")..F.string(__lua_Boot.__string_rec(aj[X],ai)))else am=F.string(am)..F.string(__lua_Boot.__string_rec(aj[X],ai))end end;do return F.string(am)..F.string(")")end end end;__lua_Boot.printClassRec=function(av,aw,ai)if aw==nil then aw=""end;local a7=__lua_Boot.__string_rec;for c,d in pairs(av)do if aw~=''then aw=aw..', 'end;aw=aw..c..':'..a7(d,ai..'	')end;do return aw end end;__lua_Boot.__string_rec=function(aj,ai)if ai==nil then ai=""end;if __lua_lib_luautf8_Utf8.len(ai)>=5 then do return"<...>"end end;local U=type(aj)if U=="boolean"then do return tostring(aj)end elseif U=="function"then do return"<function>"end elseif U=="nil"then do return"null"end elseif U=="number"then if aj==_G.math.huge then do return"Infinity"end else if aj==-_G.math.huge then do return"-Infinity"end else if aj==0 then do return"0"end else if aj~=aj then do return"NaN"end else do return tostring(aj)end end end end end elseif U=="string"then do return aj end elseif U=="table"then if aj.__enum__~=nil then do return __lua_Boot.printEnum(aj,ai)end else if _hx_wrap_if_string_field(aj,'toString')~=nil and not __lua_Boot.isArray(aj)then do return _hx_wrap_if_string_field(aj,'toString')(aj)end else if __lua_Boot.isArray(aj)then local ax=aj;if __lua_lib_luautf8_Utf8.len(ai)>5 then do return"[...]"end else local V=f({},0)local ac=0;while ac<ax.length do local X=ax[ac]ac=ac+1;V:push(__lua_Boot.__string_rec(X,F.string(ai)..F.string(1)))end;do return F.string(F.string("[")..F.string(V:join(",")))..F.string("]")end end else if aj.__class__~=nil then do return F.string(F.string("{")..F.string(__lua_Boot.printClassRec(aj,"",F.string(ai)..F.string("\t"))))..F.string("}")end else local ay=__lua_Boot.fieldIterator(aj)local az={}local aA=true;_G.table.insert(az,"{ ")local a7=ay;while a7:hasNext()do local aB=a7:next()if aA then aA=false else _G.table.insert(az,", ")end;_G.table.insert(az,F.string(F.string(F.string("")..F.string(F.string(aB)))..F.string(" : "))..F.string(__lua_Boot.__string_rec(aj[aB],F.string(ai)..F.string("\t"))))end;_G.table.insert(az," }")do return _G.table.concat(az,"")end end end end end elseif U=="thread"then do return"<thread>"end elseif U=="userdata"then local aC=_G.getmetatable(aj)if aC~=nil and aC.__tostring~=nil then do return _G.tostring(aj)end else do return"<userdata>"end end else _G.error("Unknown Lua type",0)end end;__lua_Boot.fieldIterator=function(aj)if _G.type(aj)~="table"then do return q({__fields__={next=true,hasNext=true},next=function(self)do return nil end end,hasNext=function(self)do return false end end})end end;local a0=(function()local af;if aj.__fields__~=nil then af=aj.__fields__ else af=aj end;return af end)()local o=_G.pairs(a0)local aD=function(aE,aF)while __lua_Boot.hiddenFields[aF]~=nil do aF=o(aE,aF)end;do return aF end end;local aG=aD(a0,o(a0,nil))do return q({__fields__={next=true,hasNext=true},next=function(self)local m=aG;aG=aD(a0,o(a0,aG))do return m end end,hasNext=function(self)do return aG~=nil end end})end end;__utils_NaughtyLogger.new={}__utils_NaughtyLogger.log=function(a3)__awful_Naughty.notify(q({__fields__={text=true},text=__lib_Inspect.inspect(a3)}))end;O=function(d)if d<=2147483647 and d>=-2147483648 then if d>0 then return _G.math.floor(d)else return _G.math.ceil(d)end end;if d>2251798999999999 then d=d*2 end;if d~=d or math.abs(d)==_G.math.huge then return nil end;return H.band(d,2147483647)-math.abs(H.band(d,2147483648))end;pcall(require,'bit')if bit then H=bit else local Q=_G.require('bit32')H=setmetatable({},{__index=Q})H.bnot=function(...)return O(Q.bnot(...))end;H.bxor=function(...)return O(Q.bxor(...))end end;a.__index=B.prototype;local aH=function()__lua_Boot.hiddenFields={__id__=true,hx__closures=true,super=true,prototype=true,__fields__=true,__ifields__=true,__class__=true,__properties__=true}end;_hx_wrap_if_string_field=function(aj,aI)if _G.type(aj)=='string'then if aI=='length'then return _G.string.len(aj)else return E.prototype[aI]end else return aj[aI]end end;aH()C.main()
